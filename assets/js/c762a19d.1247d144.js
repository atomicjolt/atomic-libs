"use strict";(self.webpackChunkatomic_packages=self.webpackChunkatomic_packages||[]).push([[4536],{7657:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"Hooks/useValidatedState","title":"useValidatedState","description":"useValidatedState","source":"@site/../packages/hooks/docs/Hooks/useValidatedState.mdx","sourceDirName":"Hooks","slug":"/Hooks/useValidatedState","permalink":"/atomic-libs/hooks/Hooks/useValidatedState","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"mainSidebar","previous":{"title":"useSessionStorage","permalink":"/atomic-libs/hooks/Hooks/useSessionStorage"}}');var s=a(4848),r=a(8453);const i={},l=void 0,o={},d=[{value:"<code>useValidatedState</code>",id:"usevalidatedstate",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Example",id:"example",level:3}];function u(e){const t={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"usevalidatedstate",children:(0,s.jsx)(t.code,{children:"useValidatedState"})}),"\n",(0,s.jsxs)(t.p,{children:["A ",(0,s.jsx)(t.code,{children:"setState"})," wrapper that performs some validation on any new state values."]}),"\n",(0,s.jsx)(t.h3,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"initialState"})," - The initial state value to store."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"validator"})," - A validator function to check any new state values against before updating. The validator is expected to return either nothing, or a value of type ",(0,s.jsx)(t.code,{children:"E"}),". If nothing is returned, the value is assumed to be valid and will be updated. If a value is returned, it will be set as the error value."]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"returns",children:"Returns"}),"\n",(0,s.jsx)(t.p,{children:"An array of:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"The state value."}),"\n",(0,s.jsx)(t.li,{children:"The current error value (defaults to null)."}),"\n",(0,s.jsx)(t.li,{children:"State setter function."}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"example",children:"Example"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",children:"const [state, error, setState] = useValidatedState(0, (value) => {\n    if (value < 0) {\n        return 'Value must be non-negative';\n    }\n});\n\nsetState(-1); // error will be 'Value must be non-negative'\nsetState(1); // state will be updated to 1\n"})})]})}function c(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},8453:(e,t,a)=>{a.d(t,{R:()=>i,x:()=>l});var n=a(6540);const s={},r=n.createContext(s);function i(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);