"use strict";(self.webpackChunkatomic_packages=self.webpackChunkatomic_packages||[]).push([[8550],{7714:e=>{e.exports=JSON.parse('{"version":{"pluginId":"hooks","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"mainSidebar":[{"type":"link","label":"Introduction","href":"/atomic-libs/hooks/","docId":"intro","unlisted":false},{"type":"category","label":"Constructors","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"makeContext","href":"/atomic-libs/hooks/Constructors/makeContext","docId":"Constructors/makeContext","unlisted":false},{"type":"link","label":"makeStorageHook","href":"/atomic-libs/hooks/Constructors/makeStorageHook","docId":"Constructors/makeStorageHook","unlisted":false}]},{"type":"category","label":"Hooks","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Lifecycle","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"useForceRender","href":"/atomic-libs/hooks/Hooks/Lifecycle/useForceRerender","docId":"Hooks/Lifecycle/useForceRerender","unlisted":false},{"type":"link","label":"useMount","href":"/atomic-libs/hooks/Hooks/Lifecycle/useMount","docId":"Hooks/Lifecycle/useMount","unlisted":false},{"type":"link","label":"useRender","href":"/atomic-libs/hooks/Hooks/Lifecycle/useRender","docId":"Hooks/Lifecycle/useRender","unlisted":false},{"type":"link","label":"useRenderCount","href":"/atomic-libs/hooks/Hooks/Lifecycle/useRenderCount","docId":"Hooks/Lifecycle/useRenderCount","unlisted":false},{"type":"link","label":"useUnmount","href":"/atomic-libs/hooks/Hooks/Lifecycle/useUnmount","docId":"Hooks/Lifecycle/useUnmount","unlisted":false}]},{"type":"link","label":"useBool","href":"/atomic-libs/hooks/Hooks/useBool","docId":"Hooks/useBool","unlisted":false},{"type":"link","label":"useDebouncedState","href":"/atomic-libs/hooks/Hooks/useDebouncedState","docId":"Hooks/useDebouncedState","unlisted":false},{"type":"link","label":"useDefaultState","href":"/atomic-libs/hooks/Hooks/useDefaultState","docId":"Hooks/useDefaultState","unlisted":false},{"type":"link","label":"useLocalStorage","href":"/atomic-libs/hooks/Hooks/useLocalStorage","docId":"Hooks/useLocalStorage","unlisted":false},{"type":"link","label":"useSessionStorage","href":"/atomic-libs/hooks/Hooks/useSessionStorage","docId":"Hooks/useSessionStorage","unlisted":false},{"type":"link","label":"useValidatedState","href":"/atomic-libs/hooks/Hooks/useValidatedState","docId":"Hooks/useValidatedState","unlisted":false}]}],"elementsSidebar":[],"formsSidebar":[],"hooksSidebar":[],"ltiClientSidebar":[],"canvasClientSidebar":[]},"docs":{"Constructors/makeContext":{"id":"Constructors/makeContext","title":"makeContext","description":"Creates a React context and an associated context hook.","sidebar":"mainSidebar"},"Constructors/makeStorageHook":{"id":"Constructors/makeStorageHook","title":"makeStorageHook","description":"makeStorageHook is a factory function that creates custom hooks for managing state with web storage (localStorage or sessionStorage). The created hooks synchronize the state with the specified storage, allowing the state to persist across page reloads.","sidebar":"mainSidebar"},"Hooks/Lifecycle/useForceRerender":{"id":"Hooks/Lifecycle/useForceRerender","title":"useForceRender","description":"Forces a component to re-render.","sidebar":"mainSidebar"},"Hooks/Lifecycle/useMount":{"id":"Hooks/Lifecycle/useMount","title":"useMount","description":"Run callback after the initial render of the component.","sidebar":"mainSidebar"},"Hooks/Lifecycle/useRender":{"id":"Hooks/Lifecycle/useRender","title":"useRender","description":"Run callback on every render of the component.","sidebar":"mainSidebar"},"Hooks/Lifecycle/useRenderCount":{"id":"Hooks/Lifecycle/useRenderCount","title":"useRenderCount","description":"Returns the number of times the component has been rendered.","sidebar":"mainSidebar"},"Hooks/Lifecycle/useUnmount":{"id":"Hooks/Lifecycle/useUnmount","title":"useUnmount","description":"Run callback when the component is being unmounted.","sidebar":"mainSidebar"},"Hooks/useBool":{"id":"Hooks/useBool","title":"useBool","description":"useBool is a hook that provides a boolean state and a set of functions to manipulate it.","sidebar":"mainSidebar"},"Hooks/useDebouncedState":{"id":"Hooks/useDebouncedState","title":"useDebouncedState","description":"useDebouncedState","sidebar":"mainSidebar"},"Hooks/useDefaultState":{"id":"Hooks/useDefaultState","title":"useDefaultState","description":"useDefaultState","sidebar":"mainSidebar"},"Hooks/useLocalStorage":{"id":"Hooks/useLocalStorage","title":"useLocalStorage","description":"The useLocalStorage hook allows you to manage a localStorage value as a React state value. Setting the value will also write it to localStorage. Upon a reload, if the key exists in localStorage, the value will be loaded and used as the initial state, instead of initialState.","sidebar":"mainSidebar"},"Hooks/useSessionStorage":{"id":"Hooks/useSessionStorage","title":"useSessionStorage","description":"The useSessionStorage hook allows you to manage a sessionStorage value as a React state value. Setting the value will also write it to sessionStorage. Upon a reload, if the key exists in sessionStorage, the value will be loaded and used as the initial state, instead of initialState.","sidebar":"mainSidebar"},"Hooks/useValidatedState":{"id":"Hooks/useValidatedState","title":"useValidatedState","description":"useValidatedState","sidebar":"mainSidebar"},"intro":{"id":"intro","title":"Introduction","description":"@atomicjolt/hooks is a collection of React hooks that can be used to simplify common tasks in React applications.","sidebar":"mainSidebar"}}}}')}}]);