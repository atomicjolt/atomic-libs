"use strict";(self.webpackChunkatomic_packages=self.webpackChunkatomic_packages||[]).push([[4219],{1640:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"PostMessage/PostMessageClient","title":"PostMessageClient","description":"The PostMessage Client helps you communicate with LTI platforms using the browser\'s postMessage API. This guide will show you how to set up and use the client effectively.","source":"@site/../packages/lti-client/docs/PostMessage/PostMessageClient.mdx","sourceDirName":"PostMessage","slug":"/PostMessage/PostMessageClient","permalink":"/atomic-libs/lti-client/PostMessage/PostMessageClient","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"mainSidebar","previous":{"title":"LTI Launch with Platform Storage","permalink":"/atomic-libs/lti-client/OIDCLaunch"},"next":{"title":"Platform Storage","permalink":"/atomic-libs/lti-client/PostMessage/PlatformStorage"}}');var i=t(4848),a=t(8453);const r={sidebar_position:1},o="PostMessageClient",l={},c=[{value:"Getting Started",id:"getting-started",level:2},{value:"Sending Messages",id:"sending-messages",level:2},{value:"Working with Capabilities",id:"working-with-capabilities",level:2},{value:"Advanced Usage",id:"advanced-usage",level:2},{value:"Custom Target Frames",id:"custom-target-frames",level:3},{value:"Message IDs",id:"message-ids",level:3},{value:"Timeouts",id:"timeouts",level:3},{value:"Best Practices",id:"best-practices",level:2}];function d(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"postmessageclient",children:"PostMessageClient"})}),"\n",(0,i.jsx)(s.p,{children:"The PostMessage Client helps you communicate with LTI platforms using the browser's postMessage API. This guide will show you how to set up and use the client effectively."}),"\n",(0,i.jsx)(s.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,i.jsx)(s.p,{children:"First, create a new PostMessage client:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-typescript",children:'const client = new PostMessageClient({\n  // The platform\'s origin - can use "*" during development\n  origin: "https://platform.example.com",\n  // How long to wait for responses (in ms)\n  timeout: 5000,\n});\n'})}),"\n",(0,i.jsx)(s.h2,{id:"sending-messages",children:"Sending Messages"}),"\n",(0,i.jsx)(s.p,{children:"The most common operation is sending messages to the platform. Here's how:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-typescript",children:'try {\n  const response = await client.send({\n    subject: "lti.example",\n    message_id: client.messageId("lti.example"),\n    // Add any other data for the request\n    resource_id: "12345",\n  });\n\n  // Handle the response\n  console.log(response);\n} catch (error) {\n  if (error.type === "timeout") {\n    // Handle timeout\n    console.error("Platform did not respond in time");\n  } else {\n    // Handle other errors\n    console.error("Platform returned an error:", error.message);\n  }\n}\n'})}),"\n",(0,i.jsx)(s.h2,{id:"working-with-capabilities",children:"Working with Capabilities"}),"\n",(0,i.jsx)(s.p,{children:"Before sending messages, you might want to check what the platform supports:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-typescript",children:'// Get all capabilities\nconst capabilities = await client.getCapabilities();\nconsole.log(\n  "Platform supports:",\n  capabilities.map((c) => c.subject)\n);\n\n// Check for specific capability\nconst putData = await client.getCapability("lti.put_data");\nif (putData) {\n  // Platform supports deep linking\n  console.log("Platform Storage configuration:", putData);\n}\n'})}),"\n",(0,i.jsx)(s.h2,{id:"advanced-usage",children:"Advanced Usage"}),"\n",(0,i.jsx)(s.h3,{id:"custom-target-frames",children:"Custom Target Frames"}),"\n",(0,i.jsxs)(s.p,{children:["In most cases, the ",(0,i.jsx)(s.code,{children:"PostMessageClient"})," can identify which frame to send messages to.\nHowever, you can specify a custom target frame if needed:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-typescript",children:'const client = new PostMessageClient({\n  targetFrame: window.parent, // or window reference\n  origin: "https://platform.example.com",\n});\n'})}),"\n",(0,i.jsx)(s.h3,{id:"message-ids",children:"Message IDs"}),"\n",(0,i.jsx)(s.p,{children:"Messages that are part of the official LTI spec requires a unique message ID for each request. You can generate one easily:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-typescript",children:'const messageId = client.messageId("subject", "grade", "user123");\n// Results in something like: "subject-grade-user123-a1b2c3"\n'})}),"\n",(0,i.jsx)(s.h3,{id:"timeouts",children:"Timeouts"}),"\n",(0,i.jsx)(s.p,{children:"Adjust timeout per request:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-typescript",children:"// Longer timeout for this specific request\nconst response = await client.send(payload, {\n  timeout: 10000, // 10 seconds\n});\n"})}),"\n",(0,i.jsx)(s.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsx)(s.li,{children:"Always use appropriate timeouts for your use case"}),"\n",(0,i.jsx)(s.li,{children:"Check platform capabilities before sending messages"}),"\n",(0,i.jsx)(s.li,{children:"Implement proper error handling"}),"\n",(0,i.jsx)(s.li,{children:'Use specific origins in production (avoid "*")'}),"\n",(0,i.jsx)(s.li,{children:"Generate unique message IDs for each request"}),"\n"]})]})}function p(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,s,t)=>{t.d(s,{R:()=>r,x:()=>o});var n=t(6540);const i={},a=n.createContext(i);function r(e){const s=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(a.Provider,{value:s},e.children)}}}]);