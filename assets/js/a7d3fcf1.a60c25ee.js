"use strict";(self.webpackChunkatomic_packages=self.webpackChunkatomic_packages||[]).push([[7754],{3134:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"Migrating","title":"Migrating","description":"Migrating from v2 to v3","source":"@site/../packages/atomic-elements/docs/Migrating.mdx","sourceDirName":".","slug":"/Migrating","permalink":"/atomic-libs/elements/Migrating","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"mainSidebar","previous":{"title":"Using Storybook","permalink":"/atomic-libs/elements/Storybook"},"next":{"title":"Accessibility","permalink":"/atomic-libs/elements/Guides/Accessibility"}}');var l=t(4848),a=t(8453);const i={sidebar_position:4},s="Migrating",r={},c=[{value:"Migrating from v2 to v3",id:"migrating-from-v2-to-v3",level:2},{value:"App Setup Changes",id:"app-setup-changes",level:3},{value:"Collection Components",id:"collection-components",level:3},{value:"Flex Component",id:"flex-component",level:3},{value:"Calendar Component",id:"calendar-component",level:3},{value:"Table",id:"table",level:3},{value:"Removed",id:"removed",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"migrating",children:"Migrating"})}),"\n",(0,l.jsx)(n.h2,{id:"migrating-from-v2-to-v3",children:"Migrating from v2 to v3"}),"\n",(0,l.jsx)(n.h3,{id:"app-setup-changes",children:"App Setup Changes"}),"\n",(0,l.jsxs)(n.p,{children:["In v3, the ",(0,l.jsx)(n.code,{children:"ElementsProvider"})," component is now required to be included at the root of your application. This is necessary to provide the theme to all components in the tree."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-tsx",children:'// import { CssVariables } from "@atomicjolt/atomic-elements"; // Remove this import\nimport { ElementsProvider } from "@atomicjolt/atomic-elements";\n\nconst App = () => (\n  <ElementsProvider>\n    {/* <CssVariables /> Remove this component */}\n    <YourApp />\n  </ElementsProvider>\n);\n'})}),"\n",(0,l.jsxs)(n.p,{children:["If you were using ",(0,l.jsx)(n.code,{children:"CssGlobalDefaults"})," before, you can add the ",(0,l.jsx)(n.code,{children:"applyGlobalStyles"})," prop to ",(0,l.jsx)(n.code,{children:"ElementsProvider"})," to apply the global styles."]}),"\n",(0,l.jsx)(n.h3,{id:"collection-components",children:"Collection Components"}),"\n",(0,l.jsxs)(n.p,{children:["Collection Components have migrated to a new API internally. Most things will continue to work,\nbut all collection item ",(0,l.jsx)(n.code,{children:"key"})," props will need to be replaced with ",(0,l.jsx)(n.code,{children:"id"})," props."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-tsx",children:'// Before\n<CustomSelect selectedKey="value1">\n    <Item key="value1">Value 1</Item>\n    <Item key="value2">Value 2</Item>\n</CustomSelect>\n\n// After\n// note that selectedKey is the same\n<CustomSelect selectedKey="value1">\n    <Item id="value1">Value 1</Item>\n    <Item id="value2">Value 2</Item>\n</CustomSelect>\n'})}),"\n",(0,l.jsx)(n.h3,{id:"flex-component",children:"Flex Component"}),"\n",(0,l.jsx)(n.p,{children:"The Flex component has recieved an updated set of props to match the other new Layout components."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-tsx",children:'// Before\n<Flex\n    gap={20}\n    alignItems="center"\n    justifyContent="space-between"\n>\n    <Button>Button 1</Button>\n    <Button>Button 2</Button>\n</Flex>\n\n// After\n<Flex\n    $gap="20px"\n    $align="center"\n    $justfiy="space-between"\n>\n    <Button>Button 1</Button>\n    <Button>Button 2</Button>\n</Flex>\n'})}),"\n",(0,l.jsxs)(n.p,{children:["Reference  ",(0,l.jsx)(n.a,{href:"https://atomicjolt.github.io/atomic-libs/storybook/?path=/docs/layouts-flex--overview",children:"Storybook"})," for the full set of props"]}),"\n",(0,l.jsx)(n.h3,{id:"calendar-component",children:"Calendar Component"}),"\n",(0,l.jsx)(n.p,{children:"The Calendar component now exposes a composition API for more flexibility."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-tsx",children:'<Calendar>\n    <Flex\n        $gap={20}\n        $align="center"\n        $justfiy="space-between"\n      >\n        <IconButton slot="previous-month" icon="chevron_left" variant="ghost" />\n        <Calendar.Title />\n        <IconButton slot="next-month" icon="chevron_right" variant="ghost" />\n    </Flex>\n    <Calendar.Grid>\n    {(date) => <Calendar.Cell date={date} />}\n    </Calendar.Grid>\n</Calendar>\n'})}),"\n",(0,l.jsx)(n.h3,{id:"table",children:"Table"}),"\n",(0,l.jsxs)(n.p,{children:["Table No longer supports the ",(0,l.jsx)(n.code,{children:"paginationDescriptor"})," prop. If you want to add pagination to the bottom of a table, you can use the\n",(0,l.jsx)(n.code,{children:"Table.Bottom"})," and ",(0,l.jsx)(n.code,{children:"Pagination"})," components."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-tsx",children:'<Table hasBottom>\n    <Table.Header>\n        <Table.Column> Name </Table.Column>\n        <Table.Column> Age </Table.Column>\n    </Table.Header>\n    <Table.Body>\n        <Table.Row>\n            <Table.Cell> John Doe </Table.Cell>\n            <Table.Cell> 25 </Table.Cell>\n        </Table.Row>\n    </Table.Body>\n</Table>\n<Table.Bottom>\n    <Pagination>\n        <Flex\n            alignItems="center"\n            gap={8}\n        >\n            <Pagination.FirstPage />\n            <Pagination.PrevPage />\n            <Pagination.CurrentPage />\n            <Pagination.NextPage />\n            <Pagination.LastPage />\n        </Flex>\n    </Pagination>\n</Table.Body>\n'})}),"\n",(0,l.jsx)(n.h3,{id:"removed",children:"Removed"}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Component"}),(0,l.jsx)(n.th,{children:"Replacement"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"CssVariables"})}),(0,l.jsxs)(n.td,{children:["Wrap your app in the ",(0,l.jsx)(n.code,{children:"ElementsProvider"})," component"]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"CssGlobalDefaults"})}),(0,l.jsxs)(n.td,{children:["add the ",(0,l.jsx)(n.code,{children:"applyGlobalStyles"})," prop to ",(0,l.jsx)(n.code,{children:"ElementsProvider"})]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"LoadFonts"})}),(0,l.jsx)(n.td,{children:"Load the fonts directly"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"SensibleDefaults"})}),(0,l.jsx)(n.td,{children:"No longer needed"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"PageSizeSelect"})}),(0,l.jsxs)(n.td,{children:["Use ",(0,l.jsx)(n.code,{children:"Pagination.PageSize"})]})]})]})]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>s});var o=t(6540);const l={},a=o.createContext(l);function i(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:i(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);