"use strict";(self.webpackChunkatomic_packages=self.webpackChunkatomic_packages||[]).push([[1085],{863:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>i,contentTitle:()=>m,default:()=>d,frontMatter:()=>s,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"Usage","title":"Usage","description":"@atomicjolt/forms is a package that provides a set of React hooks and components to help manage form state and validation.","source":"@site/../packages/forms/docs/Usage.mdx","sourceDirName":".","slug":"/Usage","permalink":"/atomic-libs/forms/Usage","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"mainSidebar","previous":{"title":"Introduction","permalink":"/atomic-libs/forms/"},"next":{"title":"Validations","permalink":"/atomic-libs/forms/Validations"}}');var r=o(4848),a=o(8453);const s={},m="Usage",i={},c=[{value:"Default Values",id:"default-values",level:2},{value:"Submitting the Form",id:"submitting-the-form",level:2},{value:"FormProvider",id:"formprovider",level:2},{value:"Custom Components",id:"custom-components",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"usage",children:"Usage"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"@atomicjolt/forms"})," is a package that provides a set of React hooks and components to help manage form state and validation."]}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsxs)(n.p,{children:["At it's core the library is a wrapper / integration of ",(0,r.jsx)(n.a,{href:"https://react-hook-form.com/",children:"react-hook-form"}),", so I would\nrecommend reading the documentation for ",(0,r.jsx)(n.code,{children:"react-hook-form"})," to get a better understanding of how the library works."]})}),"\n",(0,r.jsx)(n.h2,{id:"default-values",children:"Default Values"}),"\n",(0,r.jsxs)(n.p,{children:["Provide default values by passing in an object to the ",(0,r.jsx)(n.code,{children:"defaultValues"})," prop on the ",(0,r.jsx)(n.code,{children:"Form"})," component.\nThe keys of the object should match the ",(0,r.jsx)(n.code,{children:"name"})," prop of the form components."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'import { Form  } from \'@atomicjolt/forms\';\n\nconst MyForm = () => {\n   const onSubmit = (data) => {\n     console.log(data);\n     // { firstName: "John", lastName: "Doe", age: 21 }\n   }\n\n   return (\n      <Form onSubmit={onSubmit} defaultValues={{ age: 20 }}>\n         <Form.TextInput name="firstName" label="First Name" defaultValue="John" />\n         <Form.TextInput name="lastName" label="Last Name" />\n         <Form.NumberInput name="age" label="Age" />\n         <Form.Submitbutton>Submit</Form.SubmitButton>\n      </Form>\n   )\n};\n'})}),"\n",(0,r.jsx)(n.h2,{id:"submitting-the-form",children:"Submitting the Form"}),"\n",(0,r.jsxs)(n.p,{children:["To submit the form, you simply need to include a button with ",(0,r.jsx)(n.code,{children:'type="submit"'})," inside the ",(0,r.jsx)(n.code,{children:"Form"})," component."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'import { Form } from \'@atomicjolt/forms\';\n\nconst MyForm = () => {\n   const onSubmit = (data) => {\n     console.log(data);\n   }\n\n   return (\n      <Form onSubmit={onSubmit}>\n         <Form.TextInput name="firstName" label="First Name" />\n         <Form.TextInput name="lastName" label="Last Name" />\n         <Form.NumberInput name="age" label="Age" />\n         <button type="submit">Submit</button>\n      </Form>\n   )\n};\n'})}),"\n",(0,r.jsx)(n.h2,{id:"formprovider",children:"FormProvider"}),"\n",(0,r.jsxs)(n.p,{children:["If you want to use the ",(0,r.jsx)(n.code,{children:"useForm"})," hook from ",(0,r.jsx)(n.code,{children:"react-hook-form"})," directly, you can use the ",(0,r.jsx)(n.code,{children:"FormProvider"})," component to pass the form methods down to your form components."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'import { useForm } from \'react-hook-form\';\nimport { FormProvider, Form } from \'@atomicjolt/forms\';\n\nconst MyForm = () => {\n   const methods = useForm();\n\n   const onSubmit = (data) => {\n     console.log(data);\n   }\n\n   return (\n      <FormProvider onSubmit={onSubmit} {...methods}>\n         <Form.TextInput name="firstName" label="First Name" />\n         <Form.TextInput name="lastName" label="Last Name" />\n         <Form.NumberInput name="age" label="Age" />\n         <Form.SubmitButton>Submit</Form.SubmitButton>\n      </FormProvider>\n   )\n};\n'})}),"\n",(0,r.jsx)(n.h2,{id:"custom-components",children:"Custom Components"}),"\n",(0,r.jsxs)(n.p,{children:["It's simple to build your own custom form components using the ",(0,r.jsx)(n.code,{children:"useFormContext"})," hook from ",(0,r.jsx)(n.code,{children:"react-hook-form"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'import { useFormContext } from \'react-hook-form\';\n\nconst MyForm = () => {\n   const onSubmit = (data) => {\n     console.log(data);\n   }\n\n   return (\n      <Form onSubmit={onSubmit}>\n         <Form.TextInput name="firstName" label="First Name" />\n         <Form.TextInput name="lastName" label="Last Name" />\n         <CustomInput />\n      </Form>\n   )\n}\n\nconst CustomInput = () => {\n   const { register } = useFormContext();\n\n   return (\n      <input {...register("nestedInput")} />\n   )\n}\n'})})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>m});var t=o(6540);const r={},a=t.createContext(r);function s(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function m(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);