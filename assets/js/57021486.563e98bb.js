"use strict";(self.webpackChunkatomic_packages=self.webpackChunkatomic_packages||[]).push([[4584],{8453:(e,n,a)=>{a.d(n,{R:()=>i,x:()=>r});var s=a(6540);const t={},o=s.createContext(t);function i(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),s.createElement(o.Provider,{value:n},e.children)}},9847:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>h});const s=JSON.parse('{"id":"VersionManagement","title":"Version Management","description":"This repo uses changesets for managing versions. To publish a new version of a package, follow these steps:","source":"@site/docs/VersionManagement.mdx","sourceDirName":".","slug":"/VersionManagement","permalink":"/atomic-libs/VersionManagement","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"mainSidebar","previous":{"title":"Development","permalink":"/atomic-libs/Development"}}');var t=a(4848),o=a(8453);const i={},r="Version Management",c={},h=[{value:"Create a new changeset",id:"create-a-new-changeset",level:3},{value:"Version",id:"version",level:3},{value:"Publish",id:"publish",level:3}];function l(e){const n={a:"a",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"version-management",children:"Version Management"})}),"\n",(0,t.jsxs)(n.p,{children:["This repo uses ",(0,t.jsx)(n.a,{href:"https://github.com/changesets/changesets/tree/main",children:"changesets"})," for managing versions. To publish a new version of a package, follow these steps:"]}),"\n",(0,t.jsx)(n.h3,{id:"create-a-new-changeset",children:"Create a new changeset"}),"\n",(0,t.jsx)(n.p,{children:"Each time that you make meaningful changes to a package, you should create a new changeset. To do this, run the following command:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npx changeset\n"})}),"\n",(0,t.jsx)(n.p,{children:"This will guide you through the process of creating a new changeset."}),"\n",(0,t.jsx)(n.p,{children:"Once you have created a changeset, you can view it by running the following command:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npx changeset status\n"})}),"\n",(0,t.jsx)(n.h3,{id:"version",children:"Version"}),"\n",(0,t.jsx)(n.p,{children:"To publish a new version of a package, run the following command:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npx changeset version\n"})}),"\n",(0,t.jsx)(n.p,{children:"This will consume all of the changesets that have been created and bump the versions of the packages accordingly.\nAdditionally, it will write changelog entries for each package."}),"\n",(0,t.jsx)(n.h3,{id:"publish",children:"Publish"}),"\n",(0,t.jsx)(n.p,{children:"To publish the new versions of the packages, run the following command:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npx changeset publish\n"})}),"\n",(0,t.jsx)(n.p,{children:"This will loop through all of the packages and publish any that have a newer version than what is on NPM."})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}}}]);