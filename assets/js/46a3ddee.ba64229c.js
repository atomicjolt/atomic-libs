"use strict";(self.webpackChunkatomic_packages=self.webpackChunkatomic_packages||[]).push([[2423],{5126:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>m});const o=JSON.parse('{"id":"Index","title":"Introduction","description":"@atomicjolt/forms is a package that provides a set of React hooks and components to help manage form state and validation.","source":"@site/../packages/forms/docs/Index.mdx","sourceDirName":".","slug":"/","permalink":"/atomic-libs/forms/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"mainSidebar","next":{"title":"Usage","permalink":"/atomic-libs/forms/Usage"}}');var a=n(4848),s=n(8453);const r={},i="Introduction",c={},m=[];function l(t){const e={a:"a",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,s.R)(),...t.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.header,{children:(0,a.jsx)(e.h1,{id:"introduction",children:"Introduction"})}),"\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.code,{children:"@atomicjolt/forms"})," is a package that provides a set of React hooks and components to help manage form state and validation."]}),"\n",(0,a.jsxs)(e.p,{children:["At it's core the library is a wrapper / integration of ",(0,a.jsx)(e.a,{href:"https://react-hook-form.com/",children:"react-hook-form"}),"\nand ",(0,a.jsx)(e.code,{children:"@atomicjolt/atomic-elements"}),". It exposes form components that wrap Atomic Elements components and\nintegrates them with react-hook-form. You are then able to build your own custom form components just as you would\nwith react-hook-form."]}),"\n",(0,a.jsx)(e.h1,{id:"installation",children:"Installation"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:"npm install @atomicjolt/forms\n"})}),"\n",(0,a.jsx)(e.h1,{id:"usage",children:"Usage"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-tsx",children:'import { Form } from \'@atomicjolt/forms\';\nimport { Button } from \'@atomicjolt/atomic-elements\';\n\nconst MyForm = () => {\n   const onSubmit = (data) => {\n     console.log(data);\n     // { firstName: "John", lastName: "Doe", age: 21 }\n   }\n\n   return (\n      <Form onSubmit={onSubmit}>\n         <Form.TextInput name="firstName" label="First Name" />\n         <Form.TextInput name="lastName" label="Last Name" />\n         <Form.NumberInput name="age" label="Age" />\n         <Button type="submit">Submit</Button>\n      </Form>\n   )\n};\n'})})]})}function d(t={}){const{wrapper:e}={...(0,s.R)(),...t.components};return e?(0,a.jsx)(e,{...t,children:(0,a.jsx)(l,{...t})}):l(t)}},8453:(t,e,n)=>{n.d(e,{R:()=>r,x:()=>i});var o=n(6540);const a={},s=o.createContext(a);function r(t){const e=o.useContext(s);return o.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function i(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(a):t.components||a:r(t.components),o.createElement(s.Provider,{value:e},t.children)}}}]);