import{j as e}from"./jsx-runtime-D_zvdyIk.js";import{I as O}from"./helpers-B5Ajgn2E.js";import{I as s}from"./Collection-DqSZYP0m.js";import{g as V}from"./cssprops-BO85xpNm.js";import{r as b}from"./index-BCtMShv3.js";import{P as w}from"./index-DtFyGqjN.js";import{L as C}from"./index-66t8MbvJ.js";import{F as I}from"./FloatingFieldInputWrapper-BXDekG5Z.js";import{d as M}from"./styled-components.browser.esm-Y4FpNNpy.js";import{F}from"./Dropdowns.styles-N-QU7Zui.js";import{M as y,a as j}from"./MultiSelectField.component-DnaYUiEu.js";import"./spacing-Bd-CIscW.js";import"./scale-CqCDTNu0.js";import"./CollectionBuilder-D7AJqdfd.js";import"./index-BqCLlfdy.js";import"./index-D-fs5e6L.js";import"./useFocusable-DacP9xvE.js";import"./useObjectRef-D2RG7rRi.js";import"./SSRProvider-DyiXDq2k.js";import"./useLabels-B8dXFA8d.js";import"./useLocalizedStringFormatter-BmC8c4z2.js";import"./context-z6pb9OkM.js";import"./VisuallyHidden-XQ8XJ7MR.js";import"./useFocusWithin-BshFo8_g.js";import"./usePress-B9aiz4Kw.js";import"./context-CHG5exGL.js";import"./FocusScope-DX4qyq_T.js";import"./getScrollParent-BL0kfGii.js";import"./isScrollable-BSEN4xi5.js";import"./useOverlayPosition-BbsEgUQ6.js";import"./ProgressCircle.component-OpnlU6y-.js";import"./filterDOMProps-CeZl_uWj.js";import"./useLabel-DDcndmXW.js";import"./useNumberFormatter-BHOsbS6G.js";import"./NumberFormatter-DNR9MAW-.js";import"./index-CsiUWFDz.js";import"./useRenderProps-CP918x9p.js";import"./index-EJ0-2BeM.js";import"./colors-x_YFGAop.js";import"./useCloseOnScroll-DJl1HlMv.js";import"./useOverlayTriggerState-P0osIcob.js";import"./PressResponder-DMBUHunT.js";import"./useControlledState-vzCMHZvt.js";import"./useForwardedRef-Tweo1nQG.js";import"./Popover.context-C-WvC77F.js";import"./useSelectableList-Ds66KyIO.js";import"./useSelectableItem-Kg4f-Zia.js";import"./useEvent-CeKNPFU-.js";import"./scrollIntoView-DuDju04b.js";import"./useDescription-CqPnuqnT.js";import"./DOMLayoutDelegate-I1X3xMo1.js";import"./useCollator-CKtzjMN3.js";import"./getItemCount-Cm3pwbxO.js";import"./useHover-Cc-utFbH.js";import"./useFocusRing-CLjBjOxD.js";import"./useCollectionRenderer-qIlVmK1t.js";import"./Provider-op_UCnZE.js";import"./mixins-XviowZ_6.js";import"./Label.component-DfcWPA-J.js";import"./Label.context-BbpE5KUK.js";import"./useListState-CznNPLiL.js";import"./Divider.component-BrVxhPI1.js";import"./utils-DqmNl-Il.js";import"./Message.component-FuO2yEmk.js";import"./Message.context-D8t47jMD.js";import"./ErrorMessage.component-ukBp7bMH.js";import"./ErrorMessage.context-PYwFF-7o.js";import"./Button.component-CR9mri1v.js";import"./useButton-nVeIkIqk.js";import"./useLink-FIfyncSu.js";import"./SpinnerLoader.component-D-tKw9E3.js";import"./Loader.component-D7Erho5g.js";import"./Flex.component-rrKmR1Yr.js";import"./layout-C5ppTKTq.js";import"./Checkmark.component-9SUCBX5x.js";import"./Spinner.component-Bslo7_jG.js";import"./DropdownButton-CcO8_Pk9.js";import"./MaterialIcon.component-Ca-Jxrbg.js";import"./Icons.styles-D-JqKhr6.js";import"./useFormValidationState-CONlS5Wo.js";import"./useField-BY78xfaL.js";import"./useMenuTrigger-BHVMtN_y.js";import"./useOverlayTrigger-BvUXQ3-b.js";const k=M(y)`
  &.aje-multiselect--floating {
    ${F}
  }
`;function m(t){const l=b.useRef(null),{label:i,error:n,message:o,placeholder:p="Select an option",selectionPlaceholder:S=p,variant:d="default",maxHeight:x=300,dropdownPlacement:q="bottom start"}=t;return e.jsxs(k,{...t,ref:l,children:[e.jsx(I,{label:i,message:o,error:n,floating:d==="floating",children:e.jsx(y.Button,{children:e.jsx(_,{selectionPlaceholder:S,placeholder:p,variant:d})})}),e.jsx(w,{maxHeight:x,placement:q,children:e.jsx(C,{items:t.items,children:t.children})})]})}function _(t){const{selectionPlaceholder:l,placeholder:i,variant:n}=t,o=b.useContext(j);if(o)return n==="floating"?o.selectionManager.selectedKeys.size>0?l:"":o.selectionManager.selectedKeys.size>0?l:i}try{m.displayName="MultiSelect",m.__docgenInfo={description:"MultiSelect is a dropdown that allows the user to select multiple options from a list",displayName:"MultiSelect",props:{variant:{defaultValue:null,description:"",name:"variant",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"floating"'}]}},selectionPlaceholder:{defaultValue:null,description:"",name:"selectionPlaceholder",required:!1,type:{name:"string"}},isOpen:{defaultValue:null,description:"Sets the open state of the menu.",name:"isOpen",required:!1,type:{name:"boolean"}},defaultOpen:{defaultValue:null,description:"Sets the default open state of the menu.",name:"defaultOpen",required:!1,type:{name:"boolean"}},onOpenChange:{defaultValue:null,description:"Method that is called when the open state of the menu changes.",name:"onOpenChange",required:!1,type:{name:"(isOpen: boolean) => void"}},id:{defaultValue:null,description:"Unique id for the component",name:"id",required:!1,type:{name:"string"}},className:{defaultValue:null,description:`Add classes to the root element of the component.
Refer to this for possible values: https://github.com/JedWatson/classnames#readme`,name:"className",required:!1,type:{name:"Argument | Argument[]"}},size:{defaultValue:null,description:"Size of the component",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"auto"'},{value:'"medium"'},{value:'"large"'},{value:'"full"'}]}},label:{defaultValue:null,description:`A visible label for the field. Labels are always Sentence case.
If you do not provide a label, you should provide an aria-label or aria-labelledby attribute.`,name:"label",required:!1,type:{name:"ReactNode"}},message:{defaultValue:null,description:"For additional information (ex. date format mm/dd/yy)",name:"message",required:!1,type:{name:"ReactNode"}},error:{defaultValue:null,description:"Error message for the field",name:"error",required:!1,type:{name:"ReactNode"}},isDisabled:{defaultValue:null,description:`Field cannot be interacted with, should be de-emphasized in the UI
@selector [data-disabled]`,name:"isDisabled",required:!1,type:{name:"boolean"}},isReadOnly:{defaultValue:null,description:`Field cannot be modified. Should be made to not look like a editable field
@selector [data-readonly]`,name:"isReadOnly",required:!1,type:{name:"boolean"}},isRequired:{defaultValue:null,description:`Field must be interacted with. Should be indicated in the UI
@selector [data-required]`,name:"isRequired",required:!1,type:{name:"boolean"}},isInvalid:{defaultValue:null,description:"Field has an error. Should be made to look like an error.\nControls whether the value of `error` is displayed\n@selector [data-invalid]",name:"isInvalid",required:!1,type:{name:"boolean"}},name:{defaultValue:null,description:"Name of the Field",name:"name",required:!1,type:{name:"string"}},maxHeight:{defaultValue:{value:"height of the viewport"},description:"The maximum height of the the dropdown.",name:"maxHeight",required:!1,type:{name:"number"}},dropdownPlacement:{defaultValue:null,description:"",name:"dropdownPlacement",required:!1,type:{name:"enum",value:[{value:'"start"'},{value:'"right"'},{value:'"left"'},{value:'"top"'},{value:'"bottom"'},{value:'"bottom left"'},{value:'"bottom right"'},{value:'"bottom start"'},{value:'"bottom end"'},{value:'"top left"'},{value:'"top right"'},{value:'"top start"'},{value:'"top end"'},{value:'"left top"'},{value:'"left bottom"'},{value:'"start top"'},{value:'"start bottom"'},{value:'"right top"'},{value:'"right bottom"'},{value:'"end"'},{value:'"end top"'},{value:'"end bottom"'}]}}}}}catch{}const st={title:"Dropdowns/Selection/MultiSelect",component:m,parameters:{layout:"centered",cssprops:V("Dropdown","Listbox")},argTypes:{...O,selectedKeys:{control:"multi-select",description:"Control the value of the selected keys in a controlled component",options:["val1","val2","val3"]},defaultSelectedKeys:{control:!1,description:"Control the value of the selected keys in an uncontrolled component"},children:{control:!1},isOpen:{control:"boolean",description:"Control the open state of the menu"},defaultOpen:{control:"boolean",description:"Control the inital state of the menu"},onOpenChange:{control:!1,action:"onOpenChange",description:"Callback for when the menu is opened or closed",table:{category:"Events"}},onSelectionChange:{action:"onSelectionChange",control:!1,description:"Callback for when the selection changes",table:{category:"Events"}}}},a={args:{label:"Multiselect Label",children:[e.jsx(s,{children:"Option 1"},"val1"),e.jsx(s,{children:"Option 2"},"val2"),e.jsx(s,{children:"Option 3"},"val3")]}},r={args:{...a.args,variant:"floating"}};var u,c,f;a.parameters={...a.parameters,docs:{...(u=a.parameters)==null?void 0:u.docs,source:{originalSource:`{
  args: {
    label: "Multiselect Label",
    children: [<Item key="val1">Option 1</Item>, <Item key="val2">Option 2</Item>, <Item key="val3">Option 3</Item>]
  }
}`,...(f=(c=a.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var h,v,g;r.parameters={...r.parameters,docs:{...(h=r.parameters)==null?void 0:h.docs,source:{originalSource:`{
  args: {
    ...Default.args,
    variant: "floating"
  }
}`,...(g=(v=r.parameters)==null?void 0:v.docs)==null?void 0:g.source}}};const mt=["Default","Floating"];export{a as Default,r as Floating,mt as __namedExportsOrder,st as default};
