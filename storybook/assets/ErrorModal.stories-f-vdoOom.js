import{j as e}from"./jsx-runtime-D_zvdyIk.js";import{T as h}from"./index-BE2wJBgT.js";import{M as r}from"./Modal.component-B2D8MVQ0.js";import{M as y}from"./MaterialIcon.component-iQbEbiKP.js";import{B as f}from"./Button.component-82vpXv-0.js";import"./index-BCtMShv3.js";import"./index-CsiUWFDz.js";import"./useObjectRef-D2RG7rRi.js";import"./SSRProvider-DyiXDq2k.js";import"./useRenderProps-CP918x9p.js";import"./index-EJ0-2BeM.js";import"./styled-components.browser.esm-Y4FpNNpy.js";import"./typography-B_qJ0BtB.js";import"./scale-CqCDTNu0.js";import"./layout-Dd7m2B0D.js";import"./spacing-Bd-CIscW.js";import"./utils-DqmNl-Il.js";import"./colors-x_YFGAop.js";import"./context-AES9ne4t.js";import"./FocusScope-DX4qyq_T.js";import"./useFocusable-DacP9xvE.js";import"./useFocusWithin-AgzTPs3-.js";import"./usePress-CzUfyTu7.js";import"./index-BqCLlfdy.js";import"./index-D-fs5e6L.js";import"./getScrollParent-BL0kfGii.js";import"./isScrollable-BSEN4xi5.js";import"./useOverlayTriggerState-e1JH9f22.js";import"./PressResponder-Ct7jIFb_.js";import"./useControlledState-vzCMHZvt.js";import"./Modal.context-C8xYzeAB.js";import"./Flex.component-BTH7Jim3.js";import"./Heading.component-7pgoIKIJ.js";import"./index-V5Hbp4UL.js";import"./Icons.styles-D-JqKhr6.js";import"./filterDOMProps-CeZl_uWj.js";import"./useFocusRing-88kjlAJd.js";import"./useButton-DYDUZLxM.js";import"./useLink-D8UViwUR.js";import"./mixins-XviowZ_6.js";import"./Button.context-BxdzJgC_.js";import"./SpinnerLoader.component-5_47Yvoq.js";import"./Loader.component-DCLKElU7.js";import"./Checkmark.component-Bisr1A6O.js";import"./Spinner.component-C59bpdXu.js";import"./ProgressCircle.component-gsiCSqhQ.js";import"./number-nHrFdSb-.js";import"./useLabel-DDcndmXW.js";import"./useLabels-B8dXFA8d.js";import"./useNumberFormatter-BHOsbS6G.js";import"./context-z6pb9OkM.js";import"./NumberFormatter-DNR9MAW-.js";function i(n){const{title:m,children:p,buttonText:d="Close",onClose:o,...c}=n;return e.jsx(r,{$width:"400px",...c,children:u=>e.jsxs(e.Fragment,{children:[e.jsxs(r.Header,{$justify:"start",children:[e.jsx(y,{icon:"error"}),e.jsx(r.Title,{children:m})]}),e.jsx(r.Body,{children:e.jsx(h,{$size:"3",children:p})}),e.jsx(r.Footer,{children:e.jsx(f,{variant:"error",type:"button",onPress:()=>{o==null||o(),u()},children:d})})]})})}try{i.displayName="ErrorModal",i.__docgenInfo={description:"Error Modal Component. For displaying an error message and a button to close the modal.\n\nKeep in mind that the `ErrorModal` is a simple wrapper around the `Modal` component for a simple error message.\nIf you need a more complex error modal, you can use the `Modal` component directly. [Check the ErrorModal implementation for a starting point](https://github.com/atomicjolt/atomic-libs/blob/main/packages/atomic-elements/src/components/Overlays/ErrorModal/ErrorModal.component.tsx)",displayName:"ErrorModal",props:{title:{defaultValue:null,description:"Must include a title. Titles are always in Title case.",name:"title",required:!0,type:{name:"string"}},buttonText:{defaultValue:null,description:"Text of the button to close the modal.",name:"buttonText",required:!1,type:{name:"string"}},onClose:{defaultValue:null,description:"",name:"onClose",required:!1,type:{name:"() => void"}},centered:{defaultValue:null,description:"Centers the modal within the viewport\n@deprecated Use `isCentered` instead",name:"centered",required:!1,type:{name:"boolean"}},isCentered:{defaultValue:null,description:"Centers the modal within the viewport",name:"isCentered",required:!1,type:{name:"boolean"}},ensureVisible:{defaultValue:null,description:`Ensures the modal is visible by scrolling it into view.

This is typically unnecessary since modals are automatically
centered in the browser viewport. However, when rendering
within an iframe that exceeds the parent viewport height,
the optimal placement cannot be determined. In this case,
the modal is positioned at the top of the page and
automatically scrolled into view.`,name:"ensureVisible",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"RenderClassName<never>"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"RenderStyle<never>"}}}}}catch{}const ye={title:"Overlays/Modals/ErrorModal",component:i,parameters:{docs:{story:{inline:!1,height:"400px"}}}},t={args:{isOpen:!0,title:"Error",children:"An error has occurred",buttonText:"Close",centered:!0}};var a,s,l;t.parameters={...t.parameters,docs:{...(a=t.parameters)==null?void 0:a.docs,source:{originalSource:`{
  args: {
    isOpen: true,
    title: "Error",
    children: "An error has occurred",
    buttonText: "Close",
    centered: true
  }
}`,...(l=(s=t.parameters)==null?void 0:s.docs)==null?void 0:l.source}}};const fe=["Primary"];export{t as Primary,fe as __namedExportsOrder,ye as default};
