import{j as F,k as $,l as x}from"./useFocusable-B7HbK8LX.js";import{$ as h}from"./useFocusWithin-CUff8KyO.js";import{r as o}from"./index-BCtMShv3.js";function V(u={}){let{autoFocus:c=!1,isTextInput:t,within:e}=u,s=o.useRef({isFocused:!1,isFocusVisible:c||F()}),[f,n]=o.useState(!1),[l,b]=o.useState(()=>s.current.isFocused&&s.current.isFocusVisible),r=o.useCallback(()=>b(s.current.isFocused&&s.current.isFocusVisible),[]),a=o.useCallback(i=>{s.current.isFocused=i,n(i),r()},[r]);$(i=>{s.current.isFocusVisible=i,r()},[],{isTextInput:t});let{focusProps:d}=x({isDisabled:e,onFocusChange:a}),{focusWithinProps:p}=h({isDisabled:!e,onFocusWithinChange:a});return{isFocused:f,isFocusVisible:l,focusProps:e?p:d}}function g(u){const{focusProps:c,isFocusVisible:t,isFocused:e}=V(u);return{focusProps:{...c,"data-focus-visible":t||void 0},isFocusVisible:t,isFocused:e}}export{g as u};
