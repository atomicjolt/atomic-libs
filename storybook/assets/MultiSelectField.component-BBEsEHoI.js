import{j as p}from"./jsx-runtime-CkxqCPlQ.js";import{r as u}from"./index-DJO9vBfz.js";import{$ as w}from"./PressResponder-Dqe7WJHR.js";import{O as F}from"./context-C_Tf37_9.js";import{u as D}from"./useRenderProps-Bk8BH60l.js";import{c as B,u as I}from"./index-De95zDiF.js";import{$ as _}from"./CollectionBuilder-Xbel4YvD.js";import{P as k}from"./Provider-B9Eqn13H.js";import{P as K}from"./Popover.context-Iv_xuGDi.js";import{a as N}from"./Button.component-Bfqq8odl.js";import{D as j}from"./DropdownButton-F2cos4Mf.js";import{d as z}from"./styled-components.browser.esm-BQf_XqKi.js";import{m as P}from"./mixins-B7X2BZyR.js";import{$ as U}from"./useFormValidationState-DFldk10H.js";import{$ as E}from"./useOverlayTriggerState-BXapIe9V.js";import{$ as T}from"./useListState-CDCY5W5g.js";import{b as q,$ as L,e as H}from"./useObjectRef-BKue9pYL.js";import{$ as W}from"./filterDOMProps-CeZl_uWj.js";import{$ as A}from"./useSelectableList-CW_SVv5R.js";import{b as X}from"./useSelectableItem-CDjoIRnz.js";import{c as G}from"./focusSafely-BOUv7I-8.js";import{$ as J}from"./useCollator-BQpRQjOj.js";import{$ as Q}from"./useField-mSuDlNxJ.js";import{$ as Y}from"./useMenuTrigger-A3nQFss-.js";import{L as Z}from"./Label.context-ChhuUauO.js";import{M as ee}from"./Message.context-BObz3Mtj.js";import{E as ae}from"./ErrorMessage.context-D3SbpLIU.js";import{a as le,b as te}from"./ListBox.component-_1TeZ9_i.js";const ne=z.div`
  ${P.SizingX}
  ${P.FieldStatus}
`,oe=B(),ie=u.createContext(null);function re(e){const a=E(e),[t,i]=u.useState("first"),n=T({...e,selectionMode:"multiple",onSelectionChange:l=>{var s;(s=e.onSelectionChange)==null||s.call(e,l)}}),[b,c]=u.useState(!1),m=U({...e,value:n.selectionManager.selectedKeys.values().next().value});return{...n,...a,...m,selectionMode:"multiple",focusStrategy:t,setSelectedKeys(l){l===null?n.selectionManager.clearSelection():n.selectionManager.setSelectedKeys(l)},open(l="first"){n.collection.size!==0&&(i(l),a.open())},toggle(l="first"){n.collection.size!==0&&(i(l),a.toggle())},isFocused:b,setFocused:c}}const se=new WeakMap;function de(e,a,t){const{keyboardDelegate:i,isDisabled:n,isRequired:b,name:c,validationBehavior:m="aria"}=e,l=J({usage:"search",sensitivity:"base"}),s=u.useMemo(()=>i||new A(a.collection,a.disabledKeys,null,l),[i,a.collection,a.disabledKeys,l]),{menuTriggerProps:y,menuProps:g}=Y({isDisabled:n,type:"listbox"},a,t),{typeSelectProps:d}=X({keyboardDelegate:s,selectionManager:a.selectionManager,onTypeSelect(o){a.selectionManager.toggleSelection(o)}}),{isInvalid:h,validationErrors:f,validationDetails:C}=a.displayValidation,{labelProps:M,fieldProps:$,descriptionProps:O,errorMessageProps:R}=Q({...e,labelElementType:"label",isInvalid:h,errorMessage:e.errorMessage||f});d.onKeyDown=d.onKeyDownCapture,delete d.onKeyDownCapture;const V=W(e,{labelable:!0}),r=q(d,y,$),x=L();return se.set(a,{isDisabled:n,isRequired:b,name:c,validationBehavior:m}),{labelProps:{...M,onClick:()=>{var o;e.isDisabled||((o=t.current)==null||o.focus(),G("keyboard"))}},triggerProps:q(V,{...r,isDisabled:n,onKeyDown:H(r.onKeyDown,e.onKeyDown),onKeyUp:e.onKeyUp,"aria-labelledby":[x,r["aria-labelledby"],r["aria-label"]&&!r["aria-labelledby"]?r.id:null].filter(Boolean).join(" "),onFocus(o){a.isFocused||(e.onFocus&&e.onFocus(o),e.onFocusChange&&e.onFocusChange(!0),a.setFocused(!0))},onBlur(o){a.isOpen||(e.onBlur&&e.onBlur(o),e.onFocusChange&&e.onFocusChange(!1),a.setFocused(!1))}}),valueProps:{id:x},menuProps:{...g,autoFocus:a.focusStrategy||!0,shouldSelectOnPressUp:!0,shouldFocusOnHover:!0,disallowEmptySelection:!0,linkBehavior:"selection",selectionMode:"multiple",onBlur:o=>{o.currentTarget.contains(o.relatedTarget)||(e.onBlur&&e.onBlur(o),e.onFocusChange&&e.onFocusChange(!1),a.setFocused(!1))},"aria-labelledby":[$["aria-labelledby"],r["aria-label"]&&!$["aria-labelledby"]?r.id:null].filter(Boolean).join(" ")},descriptionProps:O,errorMessageProps:R,isInvalid:h,validationErrors:f,validationDetails:C}}const v=u.forwardRef(function(a,t){return[a,t]=I(oe,a,t),p.jsx(_,{content:a.children,children:i=>p.jsx(S,{...a,collection:i,selectRef:t})})});function S(e){const a=re({...e,label:!0,children:void 0}),t=u.useRef(null),{labelProps:i,triggerProps:n,valueProps:b,menuProps:c,errorMessageProps:m,descriptionProps:l}=de({...e,label:!0},a,t),{isInvalid:s,isDisabled:y,isRequired:g,isReadOnly:d,size:h="medium"}=e,f=D({componentClassName:"aje-multiselect",...e,selectors:{"data-invalid":s,"data-disabled":y,"data-required":g,"data-readonly":d}});return p.jsx(ne,{...f,children:p.jsx(k,{values:[[ie.Provider,a],[Z.Provider,i],[ee.Provider,l],[ae.Provider,{...m,isInvalid:s}],[F.Provider,a],[K.Provider,{triggerRef:t,isOpen:a.isOpen,variant:"listbox"}],[le.Provider,c],[te.Provider,a],[F.Provider,a],[N.Provider,{size:h}]],children:p.jsx(w,{...n,ref:t,isPressed:a.isOpen,isDisabled:y||d,children:f.children})})})}v.Button=j;try{S.displayName="MultiSelectFieldInner",S.__docgenInfo={description:"MultiSelect is a dropdown that allows the user to select multiple options from a list",displayName:"MultiSelectFieldInner",props:{collection:{defaultValue:null,description:"A pre-constructed collection to use instead of building one from items and children.",name:"collection",required:!0,type:{name:"BaseCollection<T>"}},selectRef:{defaultValue:null,description:"",name:"selectRef",required:!0,type:{name:"RefObject<HTMLButtonElement>"}},isOpen:{defaultValue:null,description:"Sets the open state of the menu.",name:"isOpen",required:!1,type:{name:"boolean"}},defaultOpen:{defaultValue:null,description:"Sets the default open state of the menu.",name:"defaultOpen",required:!1,type:{name:"boolean"}},onOpenChange:{defaultValue:null,description:"Method that is called when the open state of the menu changes.",name:"onOpenChange",required:!1,type:{name:"(isOpen: boolean) => void"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"RenderClassName<FieldRenderProps>"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"RenderStyle<FieldRenderProps>"}},id:{defaultValue:null,description:"Unique id for the component",name:"id",required:!1,type:{name:"string"}},isDisabled:{defaultValue:null,description:`Field cannot be interacted with, should be de-emphasized in the UI
@selector [data-disabled]`,name:"isDisabled",required:!1,type:{name:"boolean"}},size:{defaultValue:null,description:"",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"medium"'},{value:'"large"'},{value:'"auto"'},{value:'"full"'}]}},name:{defaultValue:null,description:"Name of the Field",name:"name",required:!1,type:{name:"string"}},isRequired:{defaultValue:null,description:`Field must be interacted with. Should be indicated in the UI
@selector [data-required]`,name:"isRequired",required:!1,type:{name:"boolean"}},isInvalid:{defaultValue:null,description:"Field has an error. Should be made to look like an error.\nControls whether the value of `error` is displayed\n@selector [data-invalid]",name:"isInvalid",required:!1,type:{name:"boolean"}},isReadOnly:{defaultValue:null,description:`Field cannot be modified. Should be made to not look like a editable field
@selector [data-readonly]`,name:"isReadOnly",required:!1,type:{name:"boolean"}}}}}catch{}try{v.displayName="MultiSelectField",v.__docgenInfo={description:"Building blocks for building custom & accessible select components",displayName:"MultiSelectField",props:{isOpen:{defaultValue:null,description:"Sets the open state of the menu.",name:"isOpen",required:!1,type:{name:"boolean"}},defaultOpen:{defaultValue:null,description:"Sets the default open state of the menu.",name:"defaultOpen",required:!1,type:{name:"boolean"}},onOpenChange:{defaultValue:null,description:"Method that is called when the open state of the menu changes.",name:"onOpenChange",required:!1,type:{name:"(isOpen: boolean) => void"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"RenderClassName<FieldRenderProps>"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"RenderStyle<FieldRenderProps>"}},id:{defaultValue:null,description:"Unique id for the component",name:"id",required:!1,type:{name:"string"}},isDisabled:{defaultValue:null,description:`Field cannot be interacted with, should be de-emphasized in the UI
@selector [data-disabled]`,name:"isDisabled",required:!1,type:{name:"boolean"}},size:{defaultValue:null,description:"",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"medium"'},{value:'"large"'},{value:'"auto"'},{value:'"full"'}]}},name:{defaultValue:null,description:"Name of the Field",name:"name",required:!1,type:{name:"string"}},isRequired:{defaultValue:null,description:`Field must be interacted with. Should be indicated in the UI
@selector [data-required]`,name:"isRequired",required:!1,type:{name:"boolean"}},isInvalid:{defaultValue:null,description:"Field has an error. Should be made to look like an error.\nControls whether the value of `error` is displayed\n@selector [data-invalid]",name:"isInvalid",required:!1,type:{name:"boolean"}},isReadOnly:{defaultValue:null,description:`Field cannot be modified. Should be made to not look like a editable field
@selector [data-readonly]`,name:"isReadOnly",required:!1,type:{name:"boolean"}}}}}catch{}export{v as M,ie as a};
