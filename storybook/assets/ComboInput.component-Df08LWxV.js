import{j as m}from"./jsx-runtime-D_zvdyIk.js";import{R as c}from"./index-BCtMShv3.js";import{u as h}from"./index-CsiUWFDz.js";import{u as f}from"./useRenderProps-CP918x9p.js";import{C as b}from"./ComboInput.context-BgrINUmq.js";import{S as C}from"./ComboInput.styles-GNwh4bFc.js";const s=c.forwardRef(function(e,t){[e,t]=h(b,e,t);const{className:d,style:l,padding:u,children:p,inputRef:n,...o}=e,a=f({componentClassName:"aje-combo-input",className:d,style:l,children:p,...o});return m.jsx(C,{ref:t,onClick:()=>{var i;return(i=n==null?void 0:n.current)==null?void 0:i.focus()},$paddingSide:u,...o,...a,children:a.children})});try{s.displayName="ComboInput",s.__docgenInfo={description:`ComboInput is a wrapper component designed to provide an input-like interface
that focuses the actual input element when clicked. It is ideal for building
custom input components that are not standard input elements, or inputs that
incorporate additional elements such as icons or buttons.`,displayName:"ComboInput",props:{inputRef:{defaultValue:null,description:"ref to the input element that this virtual input should focus when clicked\nWhen `ComboInput` is used within a `Field` component, this prop is automatically\nprovided",name:"inputRef",required:!1,type:{name:"RefObject<HTMLInputElement>"}},padding:{defaultValue:null,description:"Where to include padding on the sides of the ComboInput\n- `left` - padding on the left side\n- `right` - padding on the right side\n- `both` - padding on both sides",name:"padding",required:!1,type:{name:"enum",value:[{value:'"both"'},{value:'"left"'},{value:'"right"'}]}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"RenderClassName<never>"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"RenderStyle<never>"}}}}}catch{}export{s as C};
