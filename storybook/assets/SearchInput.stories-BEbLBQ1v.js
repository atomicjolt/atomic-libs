import{T as se}from"./helpers-D-Gur9Js.js";import{g as ne}from"./cssprops-BO85xpNm.js";import{j as o}from"./jsx-runtime-CkxqCPlQ.js";import{R as ue}from"./index-DJO9vBfz.js";import{e as de}from"./useObjectRef-BKue9pYL.js";import{$ as pe}from"./useLocalizedStringFormatter-DBaQHtvd.js";import{$ as ce}from"./useTextField-DSYflh9X.js";import{u as me}from"./useRenderProps-Bk8BH60l.js";import{u as fe}from"./useForwardedRef-BqZ3RrEL.js";import{S as be}from"./Field.styles-wtg9rJuP.js";import{$ as he}from"./useControlledState-CN8sBTKq.js";import{L as $e}from"./Label.component-CeN98k3i.js";import{M as ye}from"./Message.component-nkasZM07.js";import{C as ve}from"./ComboInput.component-Bgcsl7Fd.js";import{I as xe}from"./Input.component-Ci0setjS.js";import{I as Ce}from"./IconButton.component-BC26b8KI.js";import{E as Se}from"./ErrorMessage.component-CfKzjo8L.js";import"./styled-components.browser.esm-BQf_XqKi.js";import"./index-DLW06VQL.js";import"./index-BDzxygkP.js";import"./index-C0DXmw5d.js";import"./index-CyCRagT9.js";import"./Collection-CnHW8amz.js";import"./CollectionBuilder-Xbel4YvD.js";import"./index-DJdX7xnk.js";import"./SSRProvider-DAMUgb6s.js";import"./useLayoutEffect-Bj1hLagI.js";import"./index-SU87TpAq.js";import"./scale-CqCDTNu0.js";import"./context-BQ3_Es2z.js";import"./focusSafely-BOUv7I-8.js";import"./filterDOMProps-CeZl_uWj.js";import"./useFormReset-C11SSN19.js";import"./useField-mSuDlNxJ.js";import"./useLabel-CSTUXoQW.js";import"./useLabels-B24R2YQq.js";import"./useFocusable-o0N_IkwX.js";import"./useFocus-DJe2BRHe.js";import"./utils-Df1WEgxG.js";import"./useKeyboard-A8_doyNT.js";import"./useFormValidation-D05SS9o7.js";import"./useFormValidationState-DFldk10H.js";import"./index-i5X67GZP.js";import"./mixins-B7X2BZyR.js";import"./index-De95zDiF.js";import"./Label.context-ChhuUauO.js";import"./Message.context-BObz3Mtj.js";import"./ComboInput.styles-x3aI4rV_.js";import"./ComboInput.context-Dk1bHly0.js";import"./Input.context-KI5tKbdp.js";import"./Button.component-SZWKT3t6.js";import"./useFocusRing-CPkBIT8D.js";import"./useFocusWithin-DSbUfD8x.js";import"./useButton-AoKYWM9F.js";import"./usePress-Cu0aM-K5.js";import"./useLink-ByNL9j8X.js";import"./SpinnerLoader.component-CF9bxXo5.js";import"./Loader.component-TyckDnEn.js";import"./Flex.component-DqBL6Xjb.js";import"./layout-B6NAx4l9.js";import"./utils-2VFVy79V.js";import"./Checkmark.component-uYKMesek.js";import"./Spinner.component-D3qB71XV.js";import"./ProgressCircle.component-DZo3rxOV.js";import"./useNumberFormatter-D5qg7lg6.js";import"./NumberFormatter-DNR9MAW-.js";import"./colors-x_YFGAop.js";import"./MaterialIcon.component-2YMyWhOU.js";import"./Icons.styles-BaNpbbIh.js";import"./ErrorMessage.context-D3SbpLIU.js";function ge(e){let[a,i]=he(S(e.value),S(e.defaultValue)||"",e.onChange);return{value:a,setValue:i}}function S(e){if(e!=null)return e.toString()}var P={};P={"Clear search":"مسح البحث"};var E={};E={"Clear search":"Изчистване на търсене"};var I={};I={"Clear search":"Vymazat hledání"};var V={};V={"Clear search":"Ryd søgning"};var D={};D={"Clear search":"Suche zurücksetzen"};var F={};F={"Clear search":"Απαλοιφή αναζήτησης"};var k={};k={"Clear search":"Clear search"};var B={};B={"Clear search":"Borrar búsqueda"};var _={};_={"Clear search":"Tühjenda otsing"};var N={};N={"Clear search":"Tyhjennä haku"};var w={};w={"Clear search":"Effacer la recherche"};var z={};z={"Clear search":"נקה חיפוש"};var A={};A={"Clear search":"Obriši pretragu"};var j={};j={"Clear search":"Keresés törlése"};var O={};O={"Clear search":"Cancella ricerca"};var T={};T={"Clear search":"検索をクリア"};var L={};L={"Clear search":"검색 지우기"};var U={};U={"Clear search":"Išvalyti iešką"};var K={};K={"Clear search":"Notīrīt meklēšanu"};var M={};M={"Clear search":"Tøm søk"};var G={};G={"Clear search":"Zoekactie wissen"};var H={};H={"Clear search":"Wyczyść zawartość wyszukiwania"};var W={};W={"Clear search":"Limpar pesquisa"};var Z={};Z={"Clear search":"Limpar pesquisa"};var J={};J={"Clear search":"Ştergeţi căutarea"};var Q={};Q={"Clear search":"Очистить поиск"};var X={};X={"Clear search":"Vymazať vyhľadávanie"};var Y={};Y={"Clear search":"Počisti iskanje"};var ee={};ee={"Clear search":"Obriši pretragu"};var ae={};ae={"Clear search":"Rensa sökning"};var re={};re={"Clear search":"Aramayı temizle"};var te={};te={"Clear search":"Очистити пошук"};var le={};le={"Clear search":"清除搜索"};var oe={};oe={"Clear search":"清除搜尋條件"};var ie={};ie={"ar-AE":P,"bg-BG":E,"cs-CZ":I,"da-DK":V,"de-DE":D,"el-GR":F,"en-US":k,"es-ES":B,"et-EE":_,"fi-FI":N,"fr-FR":w,"he-IL":z,"hr-HR":A,"hu-HU":j,"it-IT":O,"ja-JP":T,"ko-KR":L,"lt-LT":U,"lv-LV":K,"nb-NO":M,"nl-NL":G,"pl-PL":H,"pt-BR":W,"pt-PT":Z,"ro-RO":J,"ru-RU":Q,"sk-SK":X,"sl-SI":Y,"sr-SP":ee,"sv-SE":ae,"tr-TR":re,"uk-UA":te,"zh-CN":le,"zh-TW":oe};function Re(e){return e&&e.__esModule?e.default:e}function qe(e,a,i){let d=pe(Re(ie),"@react-aria/searchfield"),{isDisabled:s,isReadOnly:t,onSubmit:n,onClear:l,type:p="search"}=e,c=r=>{const x=r.key;x==="Enter"&&(s||t)&&r.preventDefault(),!(s||t)&&(x==="Enter"&&n&&(r.preventDefault(),n(a.value)),x==="Escape"&&(a.value===""?r.continuePropagation():(a.setValue(""),l&&l())))},b=()=>{a.setValue(""),l&&l()},m=()=>{var r;(r=i.current)===null||r===void 0||r.focus()},{labelProps:h,inputProps:$,descriptionProps:y,errorMessageProps:v,...u}=ce({...e,value:a.value,onChange:a.setValue,onKeyDown:t?e.onKeyDown:de(c,e.onKeyDown),type:p},i);return{labelProps:h,inputProps:{...$,defaultValue:void 0},clearButtonProps:{"aria-label":d.format("Clear search"),excludeFromTabOrder:!0,preventFocusOnPress:!0,isDisabled:s||t,onPress:b,onPressStart:m},descriptionProps:y,errorMessageProps:v,...u}}const C=ue.forwardRef(function(a,i){const{label:d,error:s,message:t,isDisabled:n,isRequired:l,isReadOnly:p,onSubmit:c}=a,b=fe(i),m=ge(a),{labelProps:h,inputProps:$,descriptionProps:y,errorMessageProps:v,isInvalid:u}=qe(a,m,b),r=me({...a,componentClassName:"aje-input__search",values:{isInvalid:u,isDisabled:n,isReadOnly:p,isRequired:l},selectors:{"data-invalid":u,"data-disabled":n,"data-readonly":p,"data-required":l}});return o.jsxs(be,{...r,children:[d&&o.jsx($e,{...h,children:d}),t&&o.jsx(ye,{...y,children:t}),o.jsxs(ve,{padding:"both",children:[o.jsx(xe,{...$,size:void 0}),o.jsx(Ce,{icon:"search",variant:"content",onPress:()=>c&&c(m.value)})]}),u&&o.jsx(Se,{...v,children:s})]})});try{C.displayName="SearchInput",C.__docgenInfo={description:"Essentially the same as the text input, but with an `onSubmit`\nhandler when the user clicks the search button or hits the enter key",displayName:"SearchInput",props:{isDisabled:{defaultValue:null,description:`Field cannot be interacted with, should be de-emphasized in the UI
@selector [data-disabled]`,name:"isDisabled",required:!1,type:{name:"boolean"}},id:{defaultValue:null,description:"Unique id for the component",name:"id",required:!1,type:{name:"string"}},error:{defaultValue:null,description:"Error message for the field",name:"error",required:!1,type:{name:"ReactNode"}},size:{defaultValue:null,description:"Size of the component",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"medium"'},{value:'"large"'},{value:'"auto"'},{value:'"full"'}]}},label:{defaultValue:null,description:`A visible label for the field. Labels are always Sentence case.
If you do not provide a label, you should provide an aria-label or aria-labelledby attribute.`,name:"label",required:!1,type:{name:"ReactNode"}},name:{defaultValue:null,description:"Name of the Field",name:"name",required:!1,type:{name:"string"}},isReadOnly:{defaultValue:null,description:`Field cannot be modified. Should be made to not look like a editable field
@selector [data-readonly]`,name:"isReadOnly",required:!1,type:{name:"boolean"}},message:{defaultValue:null,description:"For additional information (ex. date format mm/dd/yy)",name:"message",required:!1,type:{name:"ReactNode"}},isRequired:{defaultValue:null,description:`Field must be interacted with. Should be indicated in the UI
@selector [data-required]`,name:"isRequired",required:!1,type:{name:"boolean"}},isInvalid:{defaultValue:null,description:"Field has an error. Should be made to look like an error.\nControls whether the value of `error` is displayed\n@selector [data-invalid]",name:"isInvalid",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"RenderClassName<FieldStatusProps>"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"RenderStyle<FieldStatusProps>"}}}}}catch{}try{SearchInputcomponent.displayName="SearchInputcomponent",SearchInputcomponent.__docgenInfo={description:"Essentially the same as the text input, but with an `onSubmit`\nhandler when the user clicks the search button or hits the enter key",displayName:"SearchInputcomponent",props:{isDisabled:{defaultValue:null,description:`Field cannot be interacted with, should be de-emphasized in the UI
@selector [data-disabled]`,name:"isDisabled",required:!1,type:{name:"boolean"}},id:{defaultValue:null,description:"Unique id for the component",name:"id",required:!1,type:{name:"string"}},error:{defaultValue:null,description:"Error message for the field",name:"error",required:!1,type:{name:"ReactNode"}},size:{defaultValue:null,description:"Size of the component",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"medium"'},{value:'"large"'},{value:'"auto"'},{value:'"full"'}]}},label:{defaultValue:null,description:`A visible label for the field. Labels are always Sentence case.
If you do not provide a label, you should provide an aria-label or aria-labelledby attribute.`,name:"label",required:!1,type:{name:"ReactNode"}},name:{defaultValue:null,description:"Name of the Field",name:"name",required:!1,type:{name:"string"}},isReadOnly:{defaultValue:null,description:`Field cannot be modified. Should be made to not look like a editable field
@selector [data-readonly]`,name:"isReadOnly",required:!1,type:{name:"boolean"}},message:{defaultValue:null,description:"For additional information (ex. date format mm/dd/yy)",name:"message",required:!1,type:{name:"ReactNode"}},isRequired:{defaultValue:null,description:`Field must be interacted with. Should be indicated in the UI
@selector [data-required]`,name:"isRequired",required:!1,type:{name:"boolean"}},isInvalid:{defaultValue:null,description:"Field has an error. Should be made to look like an error.\nControls whether the value of `error` is displayed\n@selector [data-invalid]",name:"isInvalid",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"RenderClassName<FieldStatusProps>"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"RenderStyle<FieldStatusProps>"}}}}}catch{}const La={title:"Inputs/User Input/SearchInput",component:C,parameters:{layout:"centered",cssprops:ne("Input")},argTypes:{onSubmit:{control:!1,table:{category:"Events"}},...se}},f={args:{label:"Search input label",onSubmit:e=>alert(`Search for: ${e}`)}};var g,R,q;f.parameters={...f.parameters,docs:{...(g=f.parameters)==null?void 0:g.docs,source:{originalSource:`{
  args: {
    label: "Search input label",
    onSubmit: (value: string) => alert(\`Search for: \${value}\`)
  }
}`,...(q=(R=f.parameters)==null?void 0:R.docs)==null?void 0:q.source}}};const Ua=["Primary"];export{f as Primary,Ua as __namedExportsOrder,La as default};
