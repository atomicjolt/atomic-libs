import{a as i}from"./useObjectRef-CA0MXmrf.js";import{$ as D}from"./filterDOMProps-CeZl_uWj.js";import{$ as F}from"./useFocusable-DHL4UX94.js";import{$ as k}from"./usePress-DBLAzBwe.js";function I(s,t){let{elementType:r="button",isDisabled:e,onPress:l,onPressStart:p,onPressEnd:c,onPressUp:b,onPressChange:f,preventFocusOnPress:u,allowFocusWhenDisabled:P,onClick:d,href:$,target:x,rel:h,type:o="button"}=s,a;r==="button"?a={type:o,disabled:e}:a={role:"button",tabIndex:e?void 0:0,href:r==="a"&&e?void 0:$,target:r==="a"?x:void 0,type:r==="input"?o:void 0,disabled:r==="input"?e:void 0,"aria-disabled":!e||r==="input"?void 0:e,rel:r==="a"?h:void 0};let{pressProps:m,isPressed:C}=k({onPressStart:p,onPressEnd:c,onPressChange:f,onPress:l,onPressUp:b,isDisabled:e,preventFocusOnPress:u,ref:t}),{focusableProps:n}=F(s,t);P&&(n.tabIndex=e?-1:n.tabIndex);let g=i(n,m,D(s,{labelable:!0}));return{isPressed:C,buttonProps:i(a,g,{"aria-haspopup":s["aria-haspopup"],"aria-expanded":s["aria-expanded"],"aria-controls":s["aria-controls"],"aria-pressed":s["aria-pressed"],onClick:y=>{d&&(d(y),console.warn("onClick is deprecated, please use onPress"))}})}}export{I as $};
