import{j as e}from"./jsx-runtime-D_zvdyIk.js";import{M as t}from"./Modal.component-C4kJ_rvY.js";import{T as x}from"./Text.component-hkMLN6ob.js";import{B as m}from"./Button.component-BLbJfzea.js";import"./index-DmM0KDA7.js";import"./context-D5CkyXRW.js";import"./FocusScope-CLRP0VYY.js";import"./useFocusable-B7cTVP20.js";import"./useObjectRef-BO7mrmvR.js";import"./SSRProvider-nIDwi1ZO.js";import"./useFocusWithin-CrVHK3Cv.js";import"./usePress-Cxy0og0d.js";import"./index-CnHy7ftH.js";import"./index-nLeaPAJ8.js";import"./getScrollParent-BL0kfGii.js";import"./isScrollable-BSEN4xi5.js";import"./useOverlayTriggerState-3VWy5d8s.js";import"./PressResponder-D-PDHmhd.js";import"./useControlledState-sJfMLWrs.js";import"./index-CqJC2f1M.js";import"./useRenderProps-BzxgHqRb.js";import"./index-CrEZfznw.js";import"./Modal.context-CnJk84dQ.js";import"./layout-UyCWIQlE.js";import"./spacing-Bd-CIscW.js";import"./utils-2VFVy79V.js";import"./styled-components.browser.esm-B0S50oBn.js";import"./Flex.component-B3J_h_z8.js";import"./Heading.component-CkemQKTh.js";import"./typography-B_qJ0BtB.js";import"./scale-CqCDTNu0.js";import"./colors-x_YFGAop.js";import"./index-f4eGkcMv.js";import"./useFocusRing-4PdL76fJ.js";import"./useButton-DlM8S39G.js";import"./filterDOMProps-CeZl_uWj.js";import"./useLink-CqmZ9M1P.js";import"./mixins-CgZ-Dp8B.js";import"./SpinnerLoader.component-C-GjOD5G.js";import"./Loader.component-op5N5W1y.js";import"./Checkmark.component-CdgaIQiV.js";import"./Spinner.component-fO3c5uZz.js";import"./ProgressCircle.component-dfZhFUDA.js";import"./useLabel-B1sX0IQZ.js";import"./useLabels-D0NjiLiF.js";import"./useNumberFormatter-CH8tnwcW.js";import"./context-BF7eBGFA.js";import"./NumberFormatter-DNR9MAW-.js";function n(a){const{title:c,children:u,confirmText:h,rejectText:f="Cancel",onConfirm:r,onReject:i,...y}=a;return e.jsx(t,{$width:"400px",...y,children:l=>e.jsxs(e.Fragment,{children:[e.jsx(t.Header,{children:e.jsx(t.Title,{children:c})}),e.jsx(t.Body,{children:e.jsx(x,{$size:"3",children:u})}),e.jsxs(t.Footer,{children:[e.jsx(m,{variant:"secondary",onPress:()=>{i==null||i(),l()},children:f}),e.jsx(m,{variant:"primary",onPress:()=>{r==null||r(),l()},children:h})]})]})})}try{n.displayName="ConfirmationModal",n.__docgenInfo={description:"Confirmation Modal Component. For when you need a small modal to confirm an action, like deleting a record\n\nKeep in mind that the `ConfirmationModal` is a simple wrapper around the `Modal` component for a simple default\nIf you need a more complex modal, you can use the `Modal` component directly. [Check the ConfirmationModal implementation for a starting point](https://github.com/atomicjolt/atomic-libs/blob/main/packages/atomic-elements/src/components/Overlays/ConfirmationModal/ConfirmationModal.component.tsx)",displayName:"ConfirmationModal",props:{title:{defaultValue:null,description:"Must include a title. Titles are always in Title case.",name:"title",required:!0,type:{name:"string"}},confirmText:{defaultValue:null,description:`Should be descriptive instead of yes or no.
If you're confirming you want to delete something,
Delete is an appropriate string to use.`,name:"confirmText",required:!0,type:{name:"string"}},rejectText:{defaultValue:null,description:`This will replace 'Cancel' as the negative action.
Sometimes you might need it to say 'Close' or something instead.`,name:"rejectText",required:!1,type:{name:"string"}},onConfirm:{defaultValue:null,description:"Called when the user clicks on the button with `confirmText`",name:"onConfirm",required:!1,type:{name:"() => void"}},onReject:{defaultValue:null,description:"Called when the user clicks on the button with\n`rejectText` or when they attempt to close the modal by clicking\non the background",name:"onReject",required:!1,type:{name:"() => void"}},centered:{defaultValue:null,description:"Centers the modal within the viewport\n@deprecated Use `isCentered` instead",name:"centered",required:!1,type:{name:"boolean"}},isCentered:{defaultValue:null,description:"Centers the modal within the viewport",name:"isCentered",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"RenderClassName<never>"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"RenderStyle<never>"}}}}}catch{}const ce={title:"Overlays/Modals/ConfirmationModal",component:n,parameters:{docs:{story:{inline:!1,height:"400px"}}}},o={args:{isOpen:!0,title:"Delete Post?",children:"Are you sure you want to delete this post? This action cannot be undone.",confirmText:"Delete",centered:!0}};var s,p,d;o.parameters={...o.parameters,docs:{...(s=o.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    isOpen: true,
    title: "Delete Post?",
    children: "Are you sure you want to delete this post? This action cannot be undone.",
    confirmText: "Delete",
    centered: true
  }
}`,...(d=(p=o.parameters)==null?void 0:p.docs)==null?void 0:d.source}}};const ue=["Primary"];export{o as Primary,ue as __namedExportsOrder,ce as default};
