import{j as t}from"./jsx-runtime-CkxqCPlQ.js";import{useMDXComponents as n}from"./index-BrnU7xv7.js";import{ae as p,af as a,ag as s,ah as m,ai as c,aj as d,ak as e,al as h}from"./index-BMIX5h-f.js";import{L as l,W as x,N as j}from"./LoadingStatus.stories-C5BVtrX-.js";import"./index-DJO9vBfz.js";import"./iframe-BRSL7Ns5.js";import"../sb-preview/runtime.js";import"./index-DJdX7xnk.js";import"./index-D-8MO0q_.js";import"./index-j_8AUxV0.js";import"./index-DrFu-skq.js";import"./cssprops-BO85xpNm.js";import"./ThreeDotLoader.component-Og23x-C0.js";import"./Loader.component-l5wuRCiG.js";import"./filterDOMProps-CeZl_uWj.js";import"./index-CyCRagT9.js";import"./useRenderProps-Bk8BH60l.js";import"./index-i5X67GZP.js";import"./styled-components.browser.esm-BQf_XqKi.js";import"./mixins-B7X2BZyR.js";import"./Flex.component-DqBL6Xjb.js";import"./index-De95zDiF.js";import"./useObjectRef-BKue9pYL.js";import"./useLayoutEffect-Bj1hLagI.js";import"./SSRProvider-DAMUgb6s.js";import"./layout-B6NAx4l9.js";import"./utils-2VFVy79V.js";import"./Checkmark.component-uYKMesek.js";import"./BouncingDots.component-CEeok0KH.js";import"./DismissableBanner.component-BLigl85k.js";import"./Banner.component-Dg1o5LQB.js";import"./IconButton.component-Cg2HWRAW.js";import"./Button.component-Bfqq8odl.js";import"./useFocusRing-CPkBIT8D.js";import"./useFocus-DJe2BRHe.js";import"./utils-Df1WEgxG.js";import"./focusSafely-BOUv7I-8.js";import"./useFocusWithin-DSbUfD8x.js";import"./useButton-AoKYWM9F.js";import"./useFocusable-o0N_IkwX.js";import"./useKeyboard-A8_doyNT.js";import"./usePress-Cu0aM-K5.js";import"./useLink-ByNL9j8X.js";import"./SpinnerLoader.component-qW2PqPLJ.js";import"./Spinner.component-D3qB71XV.js";import"./ProgressCircle.component-DZo3rxOV.js";import"./useLabel-CSTUXoQW.js";import"./useLabels-B24R2YQq.js";import"./useNumberFormatter-D5qg7lg6.js";import"./context-BQ3_Es2z.js";import"./NumberFormatter-DNR9MAW-.js";import"./colors-x_YFGAop.js";import"./MaterialIcon.component-Bqs5W7S4.js";import"./Icons.styles-BaNpbbIh.js";import"./Text.component-CdF05x9a.js";import"./typography-B_qJ0BtB.js";import"./scale-CqCDTNu0.js";function i(r){const o={code:"code",h3:"h3",p:"p",...n(),...r.components};return t.jsxs(t.Fragment,{children:[t.jsx(p,{of:l}),`
`,t.jsx(a,{}),`
`,t.jsx(s,{}),`
`,t.jsx(m,{}),`
`,t.jsx(c,{}),`
`,t.jsx(d,{}),`
`,t.jsxs(o.h3,{id:"purpose-of-the-data-prop",children:["Purpose of the ",t.jsx(o.code,{children:"data"})," prop"]}),`
`,t.jsxs(o.p,{children:[`To ensure that children components render only after the necessary data has been loaded, especially
when fetching data asynchronously, use the `,t.jsx(o.code,{children:"data"}),` prop. This prop checks for the existence of the data
before rendering the children. Additionally, when using the `,t.jsx(o.code,{children:"data"})," prop, you must pass ",t.jsx(o.code,{children:"children"}),` as a
function, which receives the `,t.jsx(o.code,{children:"data"}),` prop as its argument. This approach guarantees that the children
have access to the required data upon rendering.`]}),`
`,t.jsx(e,{of:x}),`
`,t.jsxs(o.p,{children:["If ",t.jsx(o.code,{children:"data"})," is ",t.jsx(o.code,{children:"null"})," then the ",t.jsx(o.code,{children:"fallback"})," prop will be rendered instead of the children."]}),`
`,t.jsx(e,{of:j}),`
`,t.jsx(h,{})]})}function yt(r={}){const{wrapper:o}={...n(),...r.components};return o?t.jsx(o,{...r,children:t.jsx(i,{...r})}):i(r)}export{yt as default};
