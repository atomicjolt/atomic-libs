import{$ as F}from"./useFocus-DXSPV_um.js";import{e as $,f as x}from"./focusSafely-BOUv7I-8.js";import{$ as h}from"./useFocusWithin-Bb3mfDwa.js";import{r as o}from"./index-DJO9vBfz.js";function m(u={}){let{autoFocus:c=!1,isTextInput:t,within:e}=u,s=o.useRef({isFocused:!1,isFocusVisible:c||$()}),[f,n]=o.useState(!1),[b,d]=o.useState(()=>s.current.isFocused&&s.current.isFocusVisible),r=o.useCallback(()=>d(s.current.isFocused&&s.current.isFocusVisible),[]),a=o.useCallback(i=>{s.current.isFocused=i,n(i),r()},[r]);x(i=>{s.current.isFocusVisible=i,r()},[],{isTextInput:t});let{focusProps:l}=F({isDisabled:e,onFocusChange:a}),{focusWithinProps:p}=h({isDisabled:!e,onFocusWithinChange:a});return{isFocused:f,isFocusVisible:b,focusProps:e?p:l}}function S(u){const{focusProps:c,isFocusVisible:t,isFocused:e}=m(u);return{focusProps:{...c,"data-focus-visible":t||void 0},isFocusVisible:t,isFocused:e}}export{S as u};
