import{$ as C}from"./useControlledState-vzCMHZvt.js";import{b as o}from"./useObjectRef-D2RG7rRi.js";import{$ as O}from"./filterDOMProps-CeZl_uWj.js";import{$ as R}from"./useFormReset-BY6BQbOl.js";import{$ as f}from"./usePress-B9aiz4Kw.js";import{$ as I}from"./useFocusable-DacP9xvE.js";function q(e={}){let{isReadOnly:a}=e,[s,i]=C(e.isSelected,e.defaultSelected||!1,e.onChange);function d(t){a||i(t)}function r(){a||i(!s)}return{isSelected:s,setSelected:d,toggle:r}}function z(e,a,s){let{isDisabled:i=!1,isReadOnly:d=!1,value:r,name:t,children:b,"aria-label":$,"aria-labelledby":u,validationState:n="valid",isInvalid:c}=e,p=l=>{l.stopPropagation(),a.setSelected(l.target.checked)},m=b!=null,v=$!=null||u!=null;!m&&!v&&console.warn("If you do not provide children, you must specify an aria-label for accessibility");let{pressProps:P,isPressed:S}=f({isDisabled:i}),{pressProps:g,isPressed:y}=f({onPress(){var l;a.toggle(),(l=s.current)===null||l===void 0||l.focus()},isDisabled:i||d}),{focusableProps:h}=I(e,s),x=o(P,h),D=O(e,{labelable:!0});return R(s,a.isSelected,a.setSelected),{labelProps:o(g,{onClick:l=>l.preventDefault()}),inputProps:o(D,{"aria-invalid":c||n==="invalid"||void 0,"aria-errormessage":e["aria-errormessage"],"aria-controls":e["aria-controls"],"aria-readonly":d||void 0,onChange:p,disabled:i,...r==null?{}:{value:r},name:t,type:"checkbox",...x}),isSelected:a.isSelected,isPressed:S||y,isDisabled:i,isReadOnly:d,isInvalid:c||n==="invalid"}}export{z as $,q as a};
