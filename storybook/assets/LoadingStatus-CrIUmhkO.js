import{j as t}from"./jsx-runtime-D_zvdyIk.js";import{useMDXComponents as n}from"./index-CdGsxv5d.js";import{M as p,T as s,S as a,D as m,P as c,C as d,a as e,b as h}from"./index-DNvp9Wo-.js";import{L as l,W as x,N as j}from"./LoadingStatus.stories-BRYnHsbx.js";import"./index-BCtMShv3.js";import"./iframe-CMQiey-8.js";import"./index-BqCLlfdy.js";import"./index-D-fs5e6L.js";import"./index-CXQShRbs.js";import"./index-DrFu-skq.js";import"./cssprops-BO85xpNm.js";import"./index-DMYB56kE.js";import"./ThreeDotLoader.component-BqNgMWLs.js";import"./Loader.component-BsgHHDCs.js";import"./filterDOMProps-CeZl_uWj.js";import"./useRenderProps-CP918x9p.js";import"./index-EJ0-2BeM.js";import"./styled-components.browser.esm-Y4FpNNpy.js";import"./mixins-XviowZ_6.js";import"./Flex.component-rrKmR1Yr.js";import"./index-CsiUWFDz.js";import"./useObjectRef-D2RG7rRi.js";import"./SSRProvider-DyiXDq2k.js";import"./layout-C5ppTKTq.js";import"./spacing-Bd-CIscW.js";import"./utils-DqmNl-Il.js";import"./Checkmark.component-Bisr1A6O.js";import"./BouncingDots.component-D2GvcZVJ.js";import"./DismissableBanner.component-BaKpJaaB.js";import"./Banner.component-BSmXJoeJ.js";import"./index-CiXbT4OJ.js";import"./IconButton.component-JKw63aNX.js";import"./Button.component-n6YOe3WN.js";import"./useFocusRing-CLjBjOxD.js";import"./useFocusable-DacP9xvE.js";import"./useFocusWithin-BshFo8_g.js";import"./usePress-B9aiz4Kw.js";import"./useButton-nVeIkIqk.js";import"./useLink-FIfyncSu.js";import"./Button.context-BxdzJgC_.js";import"./SpinnerLoader.component-Dxnx9axg.js";import"./Spinner.component-C44VOTWe.js";import"./ProgressCircle.component-_TQleApR.js";import"./number-nHrFdSb-.js";import"./useLabel-DDcndmXW.js";import"./useLabels-B8dXFA8d.js";import"./useNumberFormatter-BHOsbS6G.js";import"./context-z6pb9OkM.js";import"./NumberFormatter-DNR9MAW-.js";import"./colors-x_YFGAop.js";import"./MaterialIcon.component-BPfLNDii.js";import"./Icons.styles-D-JqKhr6.js";import"./Text.component-DKHUqCmG.js";import"./typography-B_qJ0BtB.js";import"./scale-CqCDTNu0.js";function i(r){const o={code:"code",h3:"h3",p:"p",...n(),...r.components};return t.jsxs(t.Fragment,{children:[t.jsx(p,{of:l}),`
`,t.jsx(s,{}),`
`,t.jsx(a,{}),`
`,t.jsx(m,{}),`
`,t.jsx(c,{}),`
`,t.jsx(d,{}),`
`,t.jsxs(o.h3,{id:"purpose-of-the-data-prop",children:["Purpose of the ",t.jsx(o.code,{children:"data"})," prop"]}),`
`,t.jsxs(o.p,{children:[`To ensure that children components render only after the necessary data has been loaded, especially
when fetching data asynchronously, use the `,t.jsx(o.code,{children:"data"}),` prop. This prop checks for the existence of the data
before rendering the children. Additionally, when using the `,t.jsx(o.code,{children:"data"})," prop, you must pass ",t.jsx(o.code,{children:"children"}),` as a
function, which receives the `,t.jsx(o.code,{children:"data"}),` prop as its argument. This approach guarantees that the children
have access to the required data upon rendering.`]}),`
`,t.jsx(e,{of:x}),`
`,t.jsxs(o.p,{children:["If ",t.jsx(o.code,{children:"data"})," is ",t.jsx(o.code,{children:"null"})," then the ",t.jsx(o.code,{children:"fallback"})," prop will be rendered instead of the children."]}),`
`,t.jsx(e,{of:j}),`
`,t.jsx(h,{})]})}function ft(r={}){const{wrapper:o}={...n(),...r.components};return o?t.jsx(o,{...r,children:t.jsx(i,{...r})}):i(r)}export{ft as default};
