import{j as t}from"./jsx-runtime-D_zvdyIk.js";import{I as n}from"./helpers-B5Ajgn2E.js";import{g as s}from"./cssprops-BO85xpNm.js";import{P as l}from"./index-CNUwzMAm.js";import{L as a}from"./index-CjF0UCmx.js";import{I as e}from"./Collection-DqSZYP0m.js";import{M as p}from"./MultiSelectField.component-DPWKES25.js";import{L as c}from"./Label.component-SkkW6TeV.js";import{M as d}from"./Message.component-CGdHk5Gg.js";import{E as h}from"./ErrorMessage.component-CCJCuFB5.js";import"./styled-components.browser.esm-Y4FpNNpy.js";import"./index-BCtMShv3.js";import"./spacing-Bd-CIscW.js";import"./scale-CqCDTNu0.js";import"./useLabels-B8dXFA8d.js";import"./useObjectRef-D2RG7rRi.js";import"./SSRProvider-DyiXDq2k.js";import"./useLocalizedStringFormatter-BmC8c4z2.js";import"./context-z6pb9OkM.js";import"./VisuallyHidden-XQ8XJ7MR.js";import"./useFocusWithin-BshFo8_g.js";import"./useFocusable-DacP9xvE.js";import"./usePress-B9aiz4Kw.js";import"./index-BqCLlfdy.js";import"./index-D-fs5e6L.js";import"./context-CHG5exGL.js";import"./FocusScope-DX4qyq_T.js";import"./getScrollParent-BL0kfGii.js";import"./isScrollable-BSEN4xi5.js";import"./useOverlayPosition-BbsEgUQ6.js";import"./ProgressCircle.component-OpnlU6y-.js";import"./filterDOMProps-CeZl_uWj.js";import"./useLabel-DDcndmXW.js";import"./useNumberFormatter-BHOsbS6G.js";import"./NumberFormatter-DNR9MAW-.js";import"./index-CsiUWFDz.js";import"./useRenderProps-CP918x9p.js";import"./index-EJ0-2BeM.js";import"./colors-x_YFGAop.js";import"./useCloseOnScroll-DJl1HlMv.js";import"./useOverlayTriggerState-P0osIcob.js";import"./PressResponder-DMBUHunT.js";import"./useControlledState-vzCMHZvt.js";import"./CollectionBuilder-D7AJqdfd.js";import"./useForwardedRef-Tweo1nQG.js";import"./Popover.context-C-WvC77F.js";import"./useSelectableList-Ds66KyIO.js";import"./useSelectableItem-Kg4f-Zia.js";import"./useEvent-CeKNPFU-.js";import"./scrollIntoView-DuDju04b.js";import"./useDescription-CqPnuqnT.js";import"./DOMLayoutDelegate-I1X3xMo1.js";import"./useCollator-CKtzjMN3.js";import"./getItemCount-Cm3pwbxO.js";import"./useHover-Cc-utFbH.js";import"./useFocusRing-CLjBjOxD.js";import"./useCollectionRenderer-qIlVmK1t.js";import"./Provider-op_UCnZE.js";import"./mixins-XviowZ_6.js";import"./useListState-CznNPLiL.js";import"./Divider.component-B3utIuXm.js";import"./utils-DqmNl-Il.js";import"./Button.component-B1VuTqO-.js";import"./useButton-nVeIkIqk.js";import"./useLink-FIfyncSu.js";import"./SpinnerLoader.component-m7qmEdMF.js";import"./Loader.component-CAkSYpHw.js";import"./index-CgV6Zd7Q.js";import"./layout-C5ppTKTq.js";import"./Checkmark.component-ByE1AGU6.js";import"./Spinner.component-Bslo7_jG.js";import"./DropdownButton-DbeDbYFX.js";import"./MaterialIcon.component-DVFNi2Fq.js";import"./Icons.styles-D-JqKhr6.js";import"./useFormValidationState-CONlS5Wo.js";import"./useField-BY78xfaL.js";import"./useMenuTrigger-BHVMtN_y.js";import"./useOverlayTrigger-BvUXQ3-b.js";import"./Label.context-BbpE5KUK.js";import"./Message.context-D8t47jMD.js";import"./ErrorMessage.context-PYwFF-7o.js";const At={title:"Fields/MultiSelectField",component:p,parameters:{layout:"centered",cssprops:s("Dropdown","Listbox")},argTypes:{...n,selectedKeys:{control:"multi-select",description:"Control the value of the selected keys in a controlled component",options:["val1","val2","val3"]},defaultSelectedKeys:{control:!1,description:"Control the value of the selected keys in an uncontrolled component"},children:{control:!1},isOpen:{control:"boolean",description:"Control the open state of the menu"},defaultOpen:{control:"boolean",description:"Control the inital state of the menu"},onOpenChange:{control:!1,action:"onOpenChange",description:"Callback for when the menu is opened or closed",table:{category:"Events"}},onSelectionChange:{action:"onSelectionChange",control:!1,description:"Callback for when the selection changes",table:{category:"Events"}}}},o={args:{children:[t.jsx(c,{children:"Select an item"},"label"),t.jsx(d,{children:"Choose an item from the list"},"message"),t.jsx(p.Button,{children:"Select Items"},"button"),t.jsx(l,{children:t.jsxs(a,{children:[t.jsx(e,{id:"1",children:"Item 1"}),t.jsx(e,{id:"2",children:"Item 2"}),t.jsx(e,{id:"3",children:"Item 3"})]})},"popover"),t.jsx(h,{children:"Something went wrong"},"error")]}};var r,i,m;o.parameters={...o.parameters,docs:{...(r=o.parameters)==null?void 0:r.docs,source:{originalSource:`{
  args: {
    children: [<FieldLabel key="label">Select an item</FieldLabel>, <FieldMessage key="message">Choose an item from the list</FieldMessage>, <MultiSelectField.Button key="button">
        Select Items
      </MultiSelectField.Button>, <Popover key="popover">
        <ListBox>
          <Item id="1">Item 1</Item>
          <Item id="2">Item 2</Item>
          <Item id="3">Item 3</Item>
        </ListBox>
      </Popover>, <FieldErrorMessage key="error">Something went wrong</FieldErrorMessage>]
  }
}`,...(m=(i=o.parameters)==null?void 0:i.docs)==null?void 0:m.source}}};const Gt=["Default"];export{o as Default,Gt as __namedExportsOrder,At as default};
