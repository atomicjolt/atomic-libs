import{j as m}from"./jsx-runtime-D_zvdyIk.js";import{r as c}from"./index-BCtMShv3.js";import{$ as l}from"./useMenuTrigger-BHVMtN_y.js";import{$ as d}from"./PressResponder-DMBUHunT.js";import{P as f}from"./Provider-op_UCnZE.js";import{P as x}from"./Popover.context-C-WvC77F.js";import{a as b}from"./Menu.component-KAiXXrZk.js";import{O as $}from"./context-CHG5exGL.js";import{$ as y}from"./useOverlayTriggerState-P0osIcob.js";function S(t){let n=y(t),[o,s]=c.useState(null),[i,a]=c.useState([]),g=()=>{a([]),n.close()};return{focusStrategy:o,...n,open(e=null){s(e),n.open()},toggle(e=null){s(e),n.toggle()},close(){g()},expandedKeysStack:i,openSubmenu:(e,u)=>{a(r=>u>r.length?r:[...r.slice(0,u),e])},closeSubmenu:(e,u)=>{a(r=>r[u]===e?r.slice(0,u):r)}}}function p(t){const{children:n}=t,o=S(t),s=c.useRef(null),{menuTriggerProps:i,menuProps:a}=l({trigger:t.trigger},o,s);return m.jsx(f,{values:[[b.Provider,a],[$.Provider,o],[x.Provider,{triggerRef:s,isOpen:o.isOpen,variant:"menu"}]],children:m.jsx(d,{...i,ref:s,isPressed:o.isOpen,children:n})})}try{p.displayName="MenuTrigger",p.__docgenInfo={description:`MenuTrigger wraps a menu target element and a menu, and manages the open state of the menu.
When the target element is pressed, the menu will open.`,displayName:"MenuTrigger",props:{}}}catch{}export{p as M};
