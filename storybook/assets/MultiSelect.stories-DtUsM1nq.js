import{j as e}from"./jsx-runtime-D_zvdyIk.js";import{I as O}from"./helpers-qskHnvo2.js";import{I as m}from"./Collection-DqSZYP0m.js";import{g as V}from"./cssprops-Cpr9BM6w.js";import{r as b}from"./index-BCtMShv3.js";import"./index-C1ylzjdf.js";import{F as M}from"./FloatingFieldInputWrapper-hrpI_ABc.js";import{u as C}from"./useRenderProps-CP918x9p.js";import{d as I}from"./styled-components.browser.esm-Y4FpNNpy.js";import{F}from"./Dropdowns.styles-N-QU7Zui.js";import{M as j,a as _}from"./MultiSelectField.component-BWOWgly6.js";import{B as P}from"./Button.component-6kuPJ_wY.js";import{M as k}from"./MaterialIcon.component-iQbEbiKP.js";import{P as R}from"./Popover.component-CCIje9me.js";import{L as N}from"./ListBox.component-BIphcHu_.js";import"./index-DBiEhC6_.js";import"./index-DLW06VQL.js";import"./index-BDzxygkP.js";import"./index-pwxEVVKW.js";import"./index-CMwQe1I_.js";import"./spacing-Bd-CIscW.js";import"./scale-CqCDTNu0.js";import"./CollectionBuilder-D7AJqdfd.js";import"./index-BqCLlfdy.js";import"./index-D-fs5e6L.js";import"./useFocusable-DacP9xvE.js";import"./useObjectRef-D2RG7rRi.js";import"./SSRProvider-DyiXDq2k.js";import"./Label.component-CkFYuFtU.js";import"./mixins-XviowZ_6.js";import"./index-CsiUWFDz.js";import"./Label.context-BbpE5KUK.js";import"./Message.component-BY76Ts6Z.js";import"./Message.context-D8t47jMD.js";import"./ErrorMessage.component-Dcm6zm2l.js";import"./ErrorMessage.context-PYwFF-7o.js";import"./index-EJ0-2BeM.js";import"./PressResponder-Ct7jIFb_.js";import"./usePress-CzUfyTu7.js";import"./context-AES9ne4t.js";import"./FocusScope-DX4qyq_T.js";import"./useFocusWithin-AgzTPs3-.js";import"./getScrollParent-BL0kfGii.js";import"./isScrollable-BSEN4xi5.js";import"./Provider-op_UCnZE.js";import"./Popover.context-C-WvC77F.js";import"./useFormValidationState-CONlS5Wo.js";import"./useOverlayTriggerState-e1JH9f22.js";import"./useControlledState-vzCMHZvt.js";import"./useListState-DGbAgUcw.js";import"./useCollectionRenderer-3wNxxKkU.js";import"./useSelectableItem-CvsJxqRU.js";import"./useEvent-CeKNPFU-.js";import"./scrollIntoView-DuDju04b.js";import"./context-z6pb9OkM.js";import"./useDescription-CqPnuqnT.js";import"./filterDOMProps-CeZl_uWj.js";import"./useSelectableList-DOP2QP6A.js";import"./DOMLayoutDelegate-BJPzvQxW.js";import"./useCollator-CKtzjMN3.js";import"./useField-BY78xfaL.js";import"./useLabel-DDcndmXW.js";import"./useLabels-B8dXFA8d.js";import"./useMenuTrigger-oprA2QPW.js";import"./useLocalizedStringFormatter-BmC8c4z2.js";import"./useOverlayTrigger-BvUXQ3-b.js";import"./useCloseOnScroll-DJl1HlMv.js";import"./Button.context-BxdzJgC_.js";import"./useFocusRing-88kjlAJd.js";import"./useButton-DYDUZLxM.js";import"./useLink-D8UViwUR.js";import"./SpinnerLoader.component-A2cq-DDp.js";import"./Loader.component-aO6Bak-V.js";import"./Flex.component-rrKmR1Yr.js";import"./layout-C5ppTKTq.js";import"./utils-DqmNl-Il.js";import"./Checkmark.component-Bisr1A6O.js";import"./Spinner.component-C59bpdXu.js";import"./ProgressCircle.component-gsiCSqhQ.js";import"./number-nHrFdSb-.js";import"./useNumberFormatter-BHOsbS6G.js";import"./NumberFormatter-DNR9MAW-.js";import"./colors-x_YFGAop.js";import"./Icons.styles-D-JqKhr6.js";import"./VisuallyHidden-zwVgBnCN.js";import"./useOverlayPosition-CUQlxOSl.js";import"./useForwardedRef-Tweo1nQG.js";import"./getItemCount-CzsFhO7O.js";import"./useHover-OH12LaHi.js";import"./Divider.component-DNSQqAMQ.js";const D=I(j)`
  &.aje-multiselect--floating {
    ${F}
  }
`,L={default:"dropdown",floating:"dropdown"};function p(t){const l=b.useRef(null),{label:n,error:s,message:o,placeholder:d="Select an option",selectionPlaceholder:y=d,variant:a="default",maxHeight:S=300,dropdownPlacement:x="bottom start"}=t,q=C({componentClassName:"aje-multiselect",variant:a,selectors:{"data-float":a==="floating"}}),w=L[a]??"dropdown";return e.jsxs(D,{...t,...q,ref:l,children:[e.jsx(M,{label:n,message:o,error:s,floating:a==="floating",children:e.jsxs(P,{variant:w,children:[e.jsx(z,{selectionPlaceholder:y,placeholder:d,variant:a}),e.jsx(k,{icon:"arrow_drop_down",style:{marginLeft:"auto"}})]})}),e.jsx(R,{maxHeight:S,placement:x,children:e.jsx(N,{items:t.items,children:t.children})})]})}function z(t){const{selectionPlaceholder:l,placeholder:n,variant:s}=t,o=b.useContext(_);if(o)return s==="floating"?o.selectionManager.selectedKeys.size>0?l:"":o.selectionManager.selectedKeys.size>0?l:n}try{p.displayName="MultiSelect",p.__docgenInfo={description:"MultiSelect is a dropdown that allows the user to select multiple options from a list",displayName:"MultiSelect",props:{variant:{defaultValue:null,description:"",name:"variant",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"floating"'}]}},selectionPlaceholder:{defaultValue:null,description:"",name:"selectionPlaceholder",required:!1,type:{name:"string"}},isOpen:{defaultValue:null,description:"Sets the open state of the menu.",name:"isOpen",required:!1,type:{name:"boolean"}},defaultOpen:{defaultValue:null,description:"Sets the default open state of the menu.",name:"defaultOpen",required:!1,type:{name:"boolean"}},onOpenChange:{defaultValue:null,description:"Method that is called when the open state of the menu changes.",name:"onOpenChange",required:!1,type:{name:"(isOpen: boolean) => void"}},id:{defaultValue:null,description:"Unique id for the component",name:"id",required:!1,type:{name:"string"}},className:{defaultValue:null,description:`Add classes to the root element of the component.
Refer to this for possible values: https://github.com/JedWatson/classnames#readme`,name:"className",required:!1,type:{name:"Argument | Argument[]"}},size:{defaultValue:null,description:"Size of the component",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"medium"'},{value:'"large"'},{value:'"auto"'},{value:'"full"'}]}},label:{defaultValue:null,description:`A visible label for the field. Labels are always Sentence case.
If you do not provide a label, you should provide an aria-label or aria-labelledby attribute.`,name:"label",required:!1,type:{name:"ReactNode"}},message:{defaultValue:null,description:"For additional information (ex. date format mm/dd/yy)",name:"message",required:!1,type:{name:"ReactNode"}},error:{defaultValue:null,description:"Error message for the field",name:"error",required:!1,type:{name:"ReactNode"}},isDisabled:{defaultValue:null,description:`Field cannot be interacted with, should be de-emphasized in the UI
@selector [data-disabled]`,name:"isDisabled",required:!1,type:{name:"boolean"}},isReadOnly:{defaultValue:null,description:`Field cannot be modified. Should be made to not look like a editable field
@selector [data-readonly]`,name:"isReadOnly",required:!1,type:{name:"boolean"}},isRequired:{defaultValue:null,description:`Field must be interacted with. Should be indicated in the UI
@selector [data-required]`,name:"isRequired",required:!1,type:{name:"boolean"}},isInvalid:{defaultValue:null,description:"Field has an error. Should be made to look like an error.\nControls whether the value of `error` is displayed\n@selector [data-invalid]",name:"isInvalid",required:!1,type:{name:"boolean"}},name:{defaultValue:null,description:"Name of the Field",name:"name",required:!1,type:{name:"string"}},maxHeight:{defaultValue:{value:"height of the viewport"},description:"The maximum height of the the dropdown.",name:"maxHeight",required:!1,type:{name:"number"}},dropdownPlacement:{defaultValue:null,description:"",name:"dropdownPlacement",required:!1,type:{name:"enum",value:[{value:'"start"'},{value:'"right"'},{value:'"left"'},{value:'"top"'},{value:'"bottom"'},{value:'"bottom left"'},{value:'"bottom right"'},{value:'"bottom start"'},{value:'"bottom end"'},{value:'"top left"'},{value:'"top right"'},{value:'"top start"'},{value:'"top end"'},{value:'"left top"'},{value:'"left bottom"'},{value:'"start top"'},{value:'"start bottom"'},{value:'"right top"'},{value:'"right bottom"'},{value:'"end"'},{value:'"end top"'},{value:'"end bottom"'}]}}}}}catch{}const xt={title:"Dropdowns/Selection/MultiSelect",component:p,parameters:{layout:"centered",cssprops:V("Dropdown","Listbox")},argTypes:{...O,selectedKeys:{control:"multi-select",description:"Control the value of the selected keys in a controlled component",options:["val1","val2","val3"]},defaultSelectedKeys:{control:!1,description:"Control the value of the selected keys in an uncontrolled component"},children:{control:!1},isOpen:{control:"boolean",description:"Control the open state of the menu"},defaultOpen:{control:"boolean",description:"Control the inital state of the menu"},onOpenChange:{control:!1,action:"onOpenChange",description:"Callback for when the menu is opened or closed",table:{category:"Events"}},onSelectionChange:{action:"onSelectionChange",control:!1,description:"Callback for when the selection changes",table:{category:"Events"}}}},r={args:{label:"Multiselect Label",children:[e.jsx(m,{children:"Option 1"},"val1"),e.jsx(m,{children:"Option 2"},"val2"),e.jsx(m,{children:"Option 3"},"val3")]}},i={args:{...r.args,variant:"floating"}};var u,c,f;r.parameters={...r.parameters,docs:{...(u=r.parameters)==null?void 0:u.docs,source:{originalSource:`{
  args: {
    label: "Multiselect Label",
    children: [<Item key="val1">Option 1</Item>, <Item key="val2">Option 2</Item>, <Item key="val3">Option 3</Item>]
  }
}`,...(f=(c=r.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var h,v,g;i.parameters={...i.parameters,docs:{...(h=i.parameters)==null?void 0:h.docs,source:{originalSource:`{
  args: {
    ...Default.args,
    variant: "floating"
  }
}`,...(g=(v=i.parameters)==null?void 0:v.docs)==null?void 0:g.source}}};const qt=["Default","Floating"];export{r as Default,i as Floating,qt as __namedExportsOrder,xt as default};
